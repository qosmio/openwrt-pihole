--- a/src/config.c
+++ b/src/config.c
@@ -751,6 +751,18 @@ void read_FTLconf(void)
 	// Read DEBUG_... setting from pihole-FTL.conf
 	read_debuging_settings(fp);
 
+	// SHM_LOG
+	// defaults to: false
+	config.shm_log = false;
+	buffer = parse_FTLconf(fp, "SHM_LOG");
+
+	if(buffer != NULL && strcasecmp(buffer, "1") == 0) {
+		config.shm_log = true;
+		logg("   SHM_LOG: Enabled");
+	} else {
+		logg("   SHM_LOG: Disabled");
+	}
+
 	logg("Finished config file parsing");
 
 	if(fp != NULL)
--- a/src/config.h
+++ b/src/config.h
@@ -48,6 +48,7 @@ typedef struct {
 	bool names_from_netdb :1;
 	bool edns0_ecs :1;
 	bool show_dnssec :1;
+	bool shm_log :1;
 	struct {
 		bool mozilla_canary :1;
 		bool icloud_private_relay :1;
--- a/src/shmem.c
+++ b/src/shmem.c
@@ -729,12 +729,14 @@ static bool realloc_shm(SharedMemory *sh
 	const int percentage = get_dev_shm_usage(df);
 
 	// Log output
-	if(resize)
-		logg("Resizing \"%s\" from %zu to (%zu * %zu) == %zu (%s)",
-		     sharedMemory->name, sharedMemory->size, size1, size2, size, df);
-	else
-		logg("Remapping \"%s\" from %zu to (%zu * %zu) == %zu",
-		     sharedMemory->name, sharedMemory->size, size1, size2, size);
+	if(config.shm_log) {
+		if(resize)
+			logg("Resizing \"%s\" from %zu to (%zu * %zu) == %zu (%s)",
+			     sharedMemory->name, sharedMemory->size, size1, size2, size, df);
+		else
+			logg("Remapping \"%s\" from %zu to (%zu * %zu) == %zu",
+			     sharedMemory->name, sharedMemory->size, size1, size2, size);
+	}
 
 	if(config.check.shmem > 0 && percentage > config.check.shmem)
 		log_resource_shortage(-1.0, 0, percentage, -1, SHMEM_PATH, df);
