--- a/api.php
+++ b/api.php
@@ -11,6 +11,7 @@ require_once("scripts/pi-hole/php/FTL.ph
 require_once("scripts/pi-hole/php/password.php");
 require_once("scripts/pi-hole/php/database.php");
 require_once("scripts/pi-hole/php/auth.php");
+require_once("scripts/pi-hole/php/update_checker.php");
 check_cors();
 
 $FTL_IP = "127.0.0.1";
@@ -70,26 +71,13 @@ elseif (isset($_GET['disable']) && $auth
 }
 elseif (isset($_GET['versions']))
 {
-	// Determine if updates are available for Pi-hole
-	// using the same script that we use for the footer
-	// on the dashboard (update notifications are
-	// suppressed if on development branches)
-	require "scripts/pi-hole/php/update_checker.php";
-	$updates = array("core_update" => $core_update,
-	                 "web_update" => $web_update,
-	                 "FTL_update" => $FTL_update);
 	$current = array("core_current" => $core_current,
 	                 "web_current" => $web_current,
 	                 "FTL_current" => $FTL_current);
-	$latest = array("core_latest" => $core_latest,
-	                "web_latest" => $web_latest,
-	                "FTL_latest" => $FTL_latest);
-	$branches = array("core_branch" => $core_branch,
-	                  "web_branch" => $web_branch,
-	                  "FTL_branch" => $FTL_branch);
-	$data = array_merge($data, $updates);
+	$branches = array("core_branch" => "openwrt",
+	                  "web_branch" => "openwrt",
+	                  "FTL_branch" => "openwrt");
 	$data = array_merge($data, $current);
-	$data = array_merge($data, $latest);
 	$data = array_merge($data, $branches);
 }
 elseif (isset($_GET['list']))
--- a/api_db.php
+++ b/api_db.php
@@ -292,7 +292,15 @@ if (isset($_GET['getQueriesCount']) && $
 
 if (isset($_GET['getDBfilesize']) && $auth)
 {
-	$filesize = filesize("/etc/pihole/pihole-FTL.db");
+	$DBF = uci_get("pihole", "@pihole[0]", "dbfile");
+	if(isset($DBF))
+	{
+		$filesize = filesize($DBF);
+	}
+	else
+	{
+		$filesize = filesize("/etc/pihole/pihole-FTL.db");
+	}
 	$result = array('filesize' => $filesize);
 	$data = array_merge($data, $result);
 }
--- a/cname_records.php
+++ b/cname_records.php	
@@ -44,6 +44,7 @@
               <p>The reason for this is that Pi-hole will not send additional queries upstream when serving <code>CNAME</code> replies. As consequence, if you set a target that isn't already known, the reply to the client may be incomplete. Pi-hole just returns the information it knows at the time of the query. This results in certain limitations for <code>CNAME</code> targets,
                 for instance, only <i>active</i> DHCP leases work as targets - mere DHCP <i>leases</i> aren't sufficient as they aren't (yet) valid DNS records.</p>
                 <p>Additionally, you can't <code>CNAME</code> external domains (<code>bing.com</code> to <code>google.com</code>) successfully as this could result in invalid SSL certificate errors when the target server does not serve content for the requested domain.</p>
+                <p>*<code>Use apply button to apply changes.</code></p>
                 <button type="button" id="btnAdd" class="btn btn-primary pull-right">Add</button>
             </div>
         </div>
@@ -67,6 +68,10 @@
     <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
     At least one domain was already present, see output below:<br/><br/><pre><span id="warn"></span></pre>
 </div>
+<div id="alApply" class="alert alert-success alert-dismissible fade in" role="alert" hidden>
+    <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
+    Applying changes, this will restart FTL and reconfigure dnsmasq.
+</div>
 <div class="row">
     <div class="col-md-12">
         <div class="box" id="recent-queries">
@@ -91,6 +96,7 @@
             <!-- /.box-body -->
         </div>
         <!-- /.box -->
+		<button type="button" class="btn btn-primary pull-right" id="btnApply">Apply</button>
     </div>
 </div>
 
--- a/dns_records.php
+++ b/dns_records.php
@@ -45,9 +45,10 @@
                   <li>The device's host name and <code>pi.hole</code></li>
                   <li>Configured in a config file in <code>/etc/dnsmasq.d/</code></li>
                   <li>Read from <code>/etc/hosts</code></li>
-                  <li>Read from the "Local (custom) DNS" list (stored in <code>/etc/pihole/custom.list</code>)</li>
+                  <li>Read from uci dhcp domain list (stored in <code>/etc/config/dhcp</code>)</li>
               </ol>
               <p>Only the first record will trigger an address-to-name association.</p>
+              <p>*<code>Use apply button to apply changes.</code></p>
                 <button type="button" id="btnAdd" class="btn btn-primary pull-right">Add</button>
             </div>
         </div>
@@ -71,6 +72,10 @@
     <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
     At least one domain was already present, see output below:<br/><br/><pre><span id="warn"></span></pre>
 </div>
+<div id="alApply" class="alert alert-success alert-dismissible fade in" role="alert" hidden>
+    <button type="button" class="close" data-hide="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
+    Applying changes, this will restart FTL and reconfigure dnsmasq.
+</div>
 <div class="row">
     <div class="col-md-12">
         <div class="box" id="recent-queries">
@@ -95,6 +100,7 @@
             <!-- /.box-body -->
         </div>
         <!-- /.box -->
+		<button type="button" class="btn btn-primary pull-right" id="btnApply">Apply</button>
     </div>
 </div>
 
--- a/queries.php
+++ b/queries.php
@@ -8,22 +8,23 @@
     require "scripts/pi-hole/php/header.php";
 
 $showing = "";
+$api_query = uci_get("pihole", "@pihole[0]", "api_query_log_show");
 
-if(isset($setupVars["API_QUERY_LOG_SHOW"]))
+if(isset($api_query))
 {
-	if($setupVars["API_QUERY_LOG_SHOW"] === "all")
+	if($api_query === "all")
 	{
 		$showing = "showing";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "permittedonly")
+	elseif($api_query === "permittedonly")
 	{
 		$showing = "showing permitted";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "blockedonly")
+	elseif($api_query === "blockedonly")
 	{
 		$showing = "showing blocked";
 	}
-	elseif($setupVars["API_QUERY_LOG_SHOW"] === "nothing")
+	elseif($api_query === "nothing")
 	{
 		$showing = "showing no queries (due to setting)";
 	}
--- a/scripts/pi-hole/js/customcname.js
+++ b/scripts/pi-hole/js/customcname.js
@@ -21,6 +21,9 @@ function showAlert(type, message) {
     case "success":
       alertElement = $("#alSuccess");
       break;
+    case "apply":
+      alertElement = $("#alApply");
+      break;
     case "warning":
       alertElement = $("#alWarning");
       messageElement = $("#warn");
@@ -41,6 +44,7 @@ function showAlert(type, message) {
 
 $(function () {
   $("#btnAdd").on("click", addCustomCNAME);
+  $("#btnApply").on("click", applyCustomCNAME);
 
   table = $("#customCNAMETable").DataTable({
     ajax: {
@@ -95,6 +99,26 @@ $(function () {
   input.setAttribute("spellcheck", false);
 });
 
+function applyCustomCNAME() {
+  if (confirm('This action will restarting FTL, you sure?')) {
+    $.ajax({
+      url: "scripts/pi-hole/php/customdns.php",
+      method: "post",
+      dataType: "json",
+      data: { action: "apply", token: token },
+      success: function (response) {
+        if (response.success) {
+          showAlert("apply");
+          table.ajax.reload();
+        } else showAlert("error", response.message);
+      },
+      error: function () {
+        showAlert("error", "Error while restarting FTL");
+      },
+    });
+  }
+}
+
 function addCustomCNAME() {
   var domain = utils.escapeHtml($("#domain").val());
   var target = utils.escapeHtml($("#target").val());
@@ -107,7 +131,6 @@ function addCustomCNAME() {
     data: { action: "add", domain: domain, target: target, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
@@ -129,7 +152,6 @@ function deleteCustomCNAME() {
     data: { action: "delete", domain: domain, target: target, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
--- a/scripts/pi-hole/js/customdns.js
+++ b/scripts/pi-hole/js/customdns.js
@@ -21,6 +21,9 @@ function showAlert(type, message) {
     case "success":
       alertElement = $("#alSuccess");
       break;
+    case "apply":
+      alertElement = $("#alApply");
+      break;
     case "warning":
       alertElement = $("#alWarning");
       messageElement = $("#warn");
@@ -41,6 +44,7 @@ function showAlert(type, message) {
 
 $(function () {
   $("#btnAdd").on("click", addCustomDNS);
+  $("#btnApply").on("click", applyCustomDNS);
 
   table = $("#customDNSTable").DataTable({
     ajax: {
@@ -94,6 +98,26 @@ $(function () {
   input.setAttribute("spellcheck", false);
 });
 
+function applyCustomDNS() {
+  if (confirm('This action will restarting FTL, you sure?')) {
+    $.ajax({
+      url: "scripts/pi-hole/php/customdns.php",
+      method: "post",
+      dataType: "json",
+      data: { action: "apply", token: token },
+      success: function (response) {
+        if (response.success) {
+          showAlert("apply");
+          table.ajax.reload();
+        } else showAlert("error", response.message);
+      },
+      error: function () {
+        showAlert("error", "Error while restarting FTL");
+      },
+    });
+  }
+}
+
 function addCustomDNS() {
   var ip = utils.escapeHtml($("#ip").val());
   var domain = utils.escapeHtml($("#domain").val());
@@ -106,7 +130,6 @@ function addCustomDNS() {
     data: { action: "add", ip: ip, domain: domain, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
@@ -128,7 +151,6 @@ function deleteCustomDNS() {
     data: { action: "delete", domain: domain, ip: ip, token: token },
     success: function (response) {
       if (response.success) {
-        showAlert("success");
         table.ajax.reload();
       } else showAlert("error", response.message);
     },
--- a/scripts/pi-hole/js/settings.js
+++ b/scripts/pi-hole/js/settings.js
@@ -9,14 +9,12 @@
 var token = $("#token").text();
 
 $(function () {
-  $("[data-static]").on("click", function () {
-    var row = $(this).closest("tr");
-    var mac = row.find("#MAC").text();
-    var ip = row.find("#IP").text();
-    var host = row.find("#HOST").text();
-    $('input[name="AddHostname"]').val(host);
-    $('input[name="AddIP"]').val(ip);
-    $('input[name="AddMAC"]').val(mac);
+  // dhcp end start
+  $("#dhcpstart").change(function() {
+    $("#dhcpend").attr('min',parseInt($("#dhcpstart").val()) + 1);
+  });
+  $("#dhcpend").attr({
+    "min" : parseInt($("#dhcpstart").val()) + 1
   });
 
   // prepare Teleporter Modal & iframe for operation
@@ -276,6 +274,36 @@ $(function () {
     });
   }
 
+  if (document.getElementById("DHCP6LeasesTable")) {
+    leasetable = $("#DHCP6LeasesTable").DataTable({
+      dom:
+        "<'row'<'col-sm-4'l><'col-sm-8'f>>" +
+        "<'row'<'col-sm-12'<'table-responsive'tr>>>" +
+        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
+      lengthMenu: [
+        [5, 10, 25, 50, 100, -1],
+        [5, 10, 25, 50, 100, "All"],
+      ],
+      columnDefs: [
+        { bSortable: false, orderable: false, targets: -1 },
+        {
+          targets: [0, 1, 2],
+          render: $.fn.dataTable.render.text(),
+        },
+      ],
+      paging: true,
+      order: [[2, "asc"]],
+      stateSave: true,
+      stateDuration: 0,
+      stateSaveCallback: function (settings, data) {
+        utils.stateSaveCallback("activeDhcp6LeaseTable", data);
+      },
+      stateLoadCallback: function () {
+        return utils.stateLoadCallback("activeDhcp6LeaseTable");
+      },
+    });
+  }
+
   if (document.getElementById("DHCPStaticLeasesTable")) {
     staticleasetable = $("#DHCPStaticLeasesTable").DataTable({
       dom:
@@ -344,14 +372,6 @@ $(function () {
   input.setAttribute("autocorrect", "off");
   input.setAttribute("autocapitalize", "off");
   input.setAttribute("spellcheck", false);
-
-  // En-/disable conditional forwarding input fields based
-  // on the checkbox state
-  $('input[name="rev_server"]').click(function () {
-    $('input[name="rev_server_cidr"]').prop("disabled", !this.checked);
-    $('input[name="rev_server_target"]').prop("disabled", !this.checked);
-    $('input[name="rev_server_domain"]').prop("disabled", !this.checked);
-  });
 });
 
 // Change "?tab=" parameter in URL for save and reload
--- a/scripts/pi-hole/php/FTL.php
+++ b/scripts/pi-hole/php/FTL.php
@@ -6,38 +6,13 @@
 *  This file is copyright under the latest version of the EUPL.
 *  Please see LICENSE file for your rights under this license. */
 
-$piholeFTLConfFile = "/etc/pihole/pihole-FTL.conf";
-
-function piholeFTLConfig()
-{
-	static $piholeFTLConfig;
-	global $piholeFTLConfFile;
-
-	if(isset($piholeFTLConfig))
-	{
-		return $piholeFTLConfig;
-	}
-
-	if(is_readable($piholeFTLConfFile))
-	{
-		$piholeFTLConfig = parse_ini_file($piholeFTLConfFile);
-	}
-	else
-	{
-		$piholeFTLConfig = array();
-	}
-
-	return $piholeFTLConfig;
-}
-
 function connectFTL($address, $port=4711)
 {
 	if($address == "127.0.0.1")
 	{
-		$config = piholeFTLConfig();
 		// Read port
-		$portfileName = isset($config['PORTFILE']) ? $config['PORTFILE'] : '';
-		if ($portfileName != '')
+		$portfileName = uci_get("pihole", "@pihole[0]", "portfile");
+		if (isset($portfileName))
 		{
 			$portfileContents = file_get_contents($portfileName);
 			if(is_numeric($portfileContents))
--- a/scripts/pi-hole/php/auth.php
+++ b/scripts/pi-hole/php/auth.php
@@ -30,14 +30,13 @@ function log_and_die($message) {
 }
 
 function check_cors() {
-    $setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-    $ipv4 = isset($setupVars["IPV4_ADDRESS"]) ? explode("/", $setupVars["IPV4_ADDRESS"])[0] : $_SERVER['SERVER_ADDR'];
-    $ipv6 = isset($setupVars["IPV6_ADDRESS"]) ? explode("/", $setupVars["IPV6_ADDRESS"])[0] : $_SERVER['SERVER_ADDR'];
+    $iface = uci_get("pihole", "@pihole[0]", "interface");
+    $ip4 = uci_get("network", $iface, "ipaddr");
+    $ipv4 = !isset($ip4) ? $_SERVER['SERVER_ADDR'] : explode("/", $ip4)[0];
 
     // Check CORS
     $AUTHORIZED_HOSTNAMES = array(
         $ipv4,
-        $ipv6,
         str_replace(array("[","]"), array("",""), $_SERVER["SERVER_NAME"]),
         "pi.hole",
         "localhost"
--- a/scripts/pi-hole/php/customcname.php
+++ b/scripts/pi-hole/php/customcname.php
@@ -20,6 +20,7 @@
         case 'get':     echo json_encode(echoCustomCNAMEEntries()); break;
         case 'add':     echo json_encode(addCustomCNAMEEntry());    break;
         case 'delete':  echo json_encode(deleteCustomCNAMEEntry()); break;
+        case 'apply':   echo json_encode(restartFTLjson()); break;
         default:
             die("Wrong action");
     }
--- a/scripts/pi-hole/php/customdns.php
+++ b/scripts/pi-hole/php/customdns.php
@@ -20,6 +20,7 @@
         case 'get':     echo json_encode(echoCustomDNSEntries()); break;
         case 'add':     echo json_encode(addCustomDNSEntry());    break;
         case 'delete':  echo json_encode(deleteCustomDNSEntry()); break;
+        case 'apply':   echo json_encode(restartFTLjson()); break;
         default:
             die("Wrong action");
     }
--- a/scripts/pi-hole/php/database.php
+++ b/scripts/pi-hole/php/database.php
@@ -8,11 +8,10 @@
 
 function getGravityDBFilename()
 {
-	// Get possible non-standard location of FTL's database
-	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
-	if(isset($FTLsettings["GRAVITYDB"]))
+	$GDBFile = uci_get("pihole", "@pihole[0]", "gravitydb");
+	if(isset($GDBFile))
 	{
-		return $FTLsettings["GRAVITYDB"];
+		return $GDBFile;
 	}
 	else
 	{
@@ -22,11 +21,10 @@ function getGravityDBFilename()
 
 function getQueriesDBFilename()
 {
-	// Get possible non-standard location of FTL's database
-	$FTLsettings = parse_ini_file("/etc/pihole/pihole-FTL.conf");
-	if(isset($FTLsettings["DBFILE"]))
+	$DBF = uci_get("pihole", "@pihole[0]", "dbfile");
+	if(isset($DBF))
 	{
-		return $FTLsettings["DBFILE"];
+		return $DBF;
 	}
 	else
 	{
--- a/scripts/pi-hole/php/footer.php
+++ b/scripts/pi-hole/php/footer.php
@@ -41,15 +41,6 @@
 <?php
     // Flushes the system write buffers of PHP. This attempts to push everything we have so far all the way to the client's browser.
     flush();
-    // Run update checker
-    //  - determines local branch each time,
-    //  - determines local and remote version every 30 minutes
-    require "scripts/pi-hole/php/update_checker.php";
-
-    $coreVersionStr = $core_current . (isset($core_commit) ? " (" . $core_branch . ", " . $core_commit . ")" : "");
-    $ftlVersionStr = $FTL_current . (isset($FTL_commit) ? " (" . $FTL_branch . ", " . $FTL_commit . ")" : "");
-    $webVersionStr = $web_current . (isset($web_commit) ? " (" . $web_branch . ", " . $web_commit . ")" : "");
-    $dockerTag = htmlspecialchars(getenv('PIHOLE_DOCKER_TAG'));
 
     $githubBaseUrl = "https://github.com/pi-hole";
     $coreUrl = $githubBaseUrl . "/pi-hole";
@@ -61,6 +52,19 @@
     $dockerReleasesUrl = $dockerUrl . "/releases";
     $ftlReleasesUrl = $ftlUrl . "/releases";
     $webReleasesUrl = $webUrl . "/releases";
+	$openWRTver = parse_ini_file("/etc/openwrt_release");
+	if(isset($openWRTver["DISTRIB_ID"]))
+	{
+        $distrib_id = $openWRTver['DISTRIB_ID'];
+	}
+	if(isset($openWRTver["DISTRIB_RELEASE"]))
+	{
+        $distrib_rel = $openWRTver['DISTRIB_RELEASE'];
+	}
+	if(isset($openWRTver["DISTRIB_REVISION"]))
+	{
+        $distrib_rev = $openWRTver['DISTRIB_REVISION'];
+	}
 ?>
     <footer class="main-footer">
         <div class="row row-centered text-center">
@@ -71,41 +75,27 @@
 
         <div class="row row-centered text-center version-info">
             <div class="col-xs-12 col-sm-8 col-md-6">
-                <?php if (isset($core_commit) || isset($web_commit) || isset($FTL_commit)) { ?>
-                <ul class="list-unstyled">
-                    <?php if($dockerTag) { ?> <li><strong>Docker Tag</strong> <?php echo $dockerTag; ?></li> <?php } ?>
-                    <li><strong>Pi-hole</strong> <?php echo $coreVersionStr; ?></li>
-                    <li><strong>FTL</strong> <?php echo $ftlVersionStr; ?></li>
-                    <li><strong>Web Interface</strong> <?php echo $webVersionStr; ?></li>
-                </ul>
-                <?php } else { ?>
                 <ul class="list-inline">
-                    <?php if($dockerTag) { ?>
-                    <li>
-                        <strong>Docker Tag</strong>
-                        <a href="<?php echo $dockerReleasesUrl . "/" . $dockerTag; ?>" rel="noopener" target="_blank"><?php echo $dockerTag; ?></a>
-                    </li>
-                    <?php } ?>
                     <li>
                         <strong>Pi-hole</strong>
                         <a href="<?php echo $coreReleasesUrl . "/" . $core_current; ?>" rel="noopener" target="_blank"><?php echo $core_current; ?></a>
-                        <?php if ($core_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $coreReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                     <li>
                         <strong>FTL</strong>
                         <a href="<?php echo $ftlReleasesUrl . "/" . $FTL_current; ?>" rel="noopener" target="_blank"><?php echo $FTL_current; ?></a>
-                        <?php if ($FTL_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $ftlReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                     <li>
                         <strong>Web Interface</strong>
                         <a href="<?php echo $webReleasesUrl . "/" . $web_current; ?>" rel="noopener" target="_blank"><?php echo $web_current; ?></a>
-                        <?php if ($web_update) { ?> &middot; <a class="lookatme" lookatme-text="Update available!" href="<?php echo $webReleasesUrl . "/latest"; ?>" rel="noopener" target="_blank">Update available!</a><?php } ?>
                     </li>
                 </ul>
-                <?php if($core_update || $web_update || $FTL_update) { ?>
-                    <p>To install updates, run <code><a href="https://docs.pi-hole.net/main/update/" rel="noopener" target="_blank">pihole -up</a></code>.</p>
-                <?php } ?>
-                <?php } ?>
+                <ul class="list-inline">
+                    <li>
+                        <strong><?php echo $distrib_id; ?></strong>
+                        <?php echo $distrib_rel; ?>
+                        <?php echo $distrib_rev; ?>
+                    </li>
+                </ul>
             </div>
         </div>
     </footer>
--- a/scripts/pi-hole/php/func.php
+++ b/scripts/pi-hole/php/func.php
@@ -80,7 +80,7 @@ function validEmail($email)
 		// Make sure that the email does not contain special characters which
 		// may be used to execute shell commands, even though they may be valid
 		// in an email address. If the escaped email does not equal the original
-		// email, it is not safe to store in setupVars.
+		// email, it is not safe to store in config file.
 		&& escapeshellcmd($email) === $email;
 }
 
@@ -140,10 +140,11 @@ if(!function_exists('hash_equals')) {
  * @param $error_on_failure If true, a warning is raised if command execution fails. Defaults to true.
  */
 function pihole_execute($argument_string, $error_on_failure = true) {
+    $sudo = (posix_getuid() !== 0 ? "sudo " : null);
     $escaped = escapeshellcmd($argument_string);
     $output = null;
     $return_status = -1;
-    $command = "sudo pihole " . $escaped;
+    $command = $sudo . "pihole " . $escaped;
     exec($command, $output, $return_status);
     if($return_status !== 0)
     {
@@ -152,8 +153,86 @@ function pihole_execute($argument_string
     return $output;
 }
 
-// Custom DNS
-$customDNSFile = "/etc/pihole/custom.list";
+function uci_commit($package) {
+    $sudo = (posix_getuid() !== 0 ? "sudo " : null);
+    $command = $sudo . "uci commit " . $package . " 2>&1";
+    exec($command, $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Executing {$command} failed.", E_USER_WARNING);
+    }
+    return $ret;
+}
+
+function uci_get($package, $config, $option) {
+    $pkg = escapeshellcmd($package);
+    $cfg = escapeshellcmd($config);
+    $opt = escapeshellcmd($option);
+    $command = "uci -q get " . $pkg . "." . $cfg . "." . $opt;
+    $output = trim(shell_exec($command));
+    if (strlen($output) > 0) {
+        return $output;
+    }
+    return null;
+}
+
+function uci_set($package, $config, $option, $value, $type = NULL) {
+    $sudo = (posix_getuid() !== 0 ? "sudo " : null);
+    $cmd = ($type !== "list" ? "set " : "add_list ");
+    $cfg = escapeshellcmd($config);
+    $val = escapeshellcmd($value);
+    $out = null;
+    $command = $sudo . "uci " . $cmd . $package . "." . $cfg . "." . $option . "=" . $val . " 2>&1";
+    exec($command, $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Executing {$command} failed.", E_USER_WARNING);
+        shell_exec($sudo . "uci revert " . $package);
+    }
+    return $ret;
+}
+
+function uci_add($package, $config) {
+    $sudo = (posix_getuid() !== 0 ? "sudo " : null);
+    $out = null;
+    $command = $sudo . "uci add " . $package . " " . $config . " 2>&1";
+    exec($command, $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Executing {$command} failed.", E_USER_WARNING);
+        shell_exec($sudo . "uci revert " . $package);
+    }
+    return $ret;
+}
+
+function uci_del($package, $config, $option = NULL, $value = NULL, $type = NULL) {
+    $sudo = (posix_getuid() !== 0 ? "sudo " : null);
+    $cmd = ($type !== "list" ? "del " : "del_list ");
+    $cfg = escapeshellcmd($config);
+    $out = null;
+    $command = $sudo . "uci " . $cmd . $package . "." . $cfg;
+    if (isset($option)) {
+        $command = $command . "." . $option;
+	    if (isset($value)) {
+	        $command = $command . "=" . $value;
+	    }
+    }
+    exec($command . " 2>&1", $out, $ret);
+    if($ret !== 0) {
+        trigger_error("Executing {$command} failed.", E_USER_WARNING);
+    }
+    return $ret;
+}
+
+function restartFTLjson($json=true)
+{
+    try
+    {
+        pihole_execute("-a restartdns");
+        return returnSuccess("", $json);
+    }
+    catch (\Exception $ex)
+    {
+        return returnError($ex->getMessage(), $json);
+    }
+}
 
 function echoCustomDNSEntries()
 {
@@ -168,28 +247,27 @@ function echoCustomDNSEntries()
 
 function getCustomDNSEntries()
 {
-    global $customDNSFile;
-
     $entries = [];
+    $idx = substr_count(file_get_contents("/etc/config/dhcp"), "config domain") - 1;
+
+    if ($idx < 0) {
+        return $entries;
+    }
 
-    $handle = fopen($customDNSFile, "r");
-    if ($handle)
+    for($i = 0; $i <= $idx; $i++)
     {
-        while (($line = fgets($handle)) !== false) {
-            $line = str_replace("\r","", $line);
-            $line = str_replace("\n","", $line);
-            $explodedLine = explode (" ", $line);
-
-            if (count($explodedLine) != 2)
-                continue;
-
-            $data = new \stdClass();
-            $data->ip = $explodedLine[0];
-            $data->domain = $explodedLine[1];
-            $entries[] = $data;
+        $domain = ""; $ip = "";
+        $domain = uci_get("dhcp", "@domain[$i]", "name");
+        $ip = uci_get("dhcp", "@domain[$i]", "ip");
+
+        if (!isset($domain) || !isset($ip)) {
+            continue;
         }
 
-        fclose($handle);
+        $data = new \stdClass();
+        $data->ip = $ip;
+        $data->domain = $domain;
+        $entries[] = $data;
     }
 
     return $entries;
@@ -232,7 +310,17 @@ function addCustomDNSEntry($ip="", $doma
         }
 
         // Add record
-        pihole_execute("-a addcustomdns ".$ip." ".$domain." ".$reload);
+        if (uci_add("dhcp", "domain") !== 0) {
+            return returnError("Failed to create uci dhcp domain");
+        } else {
+            if (uci_set("dhcp", "@domain[-1]", "name", $domain) !== 0) {
+                return returnError("Failed to set uci dhcp domain name: $domain");
+            }
+            if (uci_set("dhcp", "@domain[-1]", "ip", $ip) !== 0) {
+                return returnError("Failed to set uci dhcp domain ip: $ip");
+            }
+            uci_commit("dhcp");
+        }
 
         return returnSuccess("", $json);
     }
@@ -268,41 +356,24 @@ function deleteCustomDNSEntry()
         if (!$found)
             return returnError("This domain/ip association does not exist");
 
-        pihole_execute("-a removecustomdns ".$ip." ".$domain);
-
-        return returnSuccess();
-    }
-    catch (\Exception $ex)
-    {
-        return returnError($ex->getMessage());
-    }
-}
-
-function deleteAllCustomDNSEntries($reload="")
-{
-    try
-		{
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
-        $existingEntries = getCustomDNSEntries();
-        // passing false to pihole_execute stops pihole from reloading after each enty has been deleted
-        foreach ($existingEntries as $entry) {
-            pihole_execute("-a removecustomdns ".$entry->ip." ".$entry->domain." ".$reload);
+        preg_match("/config domain.*option name \'$domain\'.*option ip \'$ip\'/s", file_get_contents("/etc/config/dhcp"), $matches);
+        if (strlen(implode($matches)) > 0) {
+            $count = substr_count(implode($matches), "config domain") - 1;
+            if (uci_del("dhcp", "@domain[$count]") !== 0) {
+                return returnError("Failed to delete DNS Record");
+            }
+            uci_commit("dhcp");
+            return returnSuccess();
+        } else {
+            return returnError("Cannot find DNS Record (domain) index for $domain $ip");
         }
-
     }
     catch (\Exception $ex)
     {
         return returnError($ex->getMessage());
     }
-
-    return returnSuccess();
 }
 
-// CNAME
-$customCNAMEFile = "/etc/dnsmasq.d/05-pihole-custom-cname.conf";
-
 function echoCustomCNAMEEntries()
 {
     $entries = getCustomCNAMEEntries();
@@ -316,32 +387,27 @@ function echoCustomCNAMEEntries()
 
 function getCustomCNAMEEntries()
 {
-    global $customCNAMEFile;
-
     $entries = [];
+    $idx = substr_count(file_get_contents("/etc/config/dhcp"), "config cname") - 1;
 
-    if (!file_exists($customCNAMEFile)) return $entries;
-
-    $handle = fopen($customCNAMEFile, "r");
-    if ($handle)
-    {
-        while (($line = fgets($handle)) !== false) {
-            $line = str_replace("cname=","", $line);
-            $line = str_replace("\r","", $line);
-            $line = str_replace("\n","", $line);
-            $explodedLine = explode (",", $line);
-
-            if (count($explodedLine) <= 1)
-                continue;
-
-            $data = new \stdClass();
-            $data->domains = array_slice($explodedLine, 0, -1);
-            $data->domain = implode(",", $data->domains);
-            $data->target = $explodedLine[count($explodedLine)-1];
-            $entries[] = $data;
-        }
-
-        fclose($handle);
+	if ($idx < 0) {
+		return $entries;
+	}
+
+	for($i = 0; $i <= $idx; $i++)
+    {
+		$cname = ""; $target = "";
+		$cname = uci_get("dhcp", "@cname[$i]", "cname");
+		$target = uci_get("dhcp", "@cname[$i]", "target");
+
+		if (!isset($cname) || !isset($target)) {
+			continue;
+		}
+
+        $data = new \stdClass();
+        $data->target = $target;
+        $data->domain = $cname;
+        $entries[] = $data;
     }
 
     return $entries;
@@ -369,22 +435,25 @@ function addCustomCNAMEEntry($domain="",
         if (!validDomain($target))
             return returnError("Target must be valid", $json);
 
-        // Check if each submitted domain is valid
-        $domains = array_map('trim', explode(",", $domain));
-        foreach ($domains as $d) {
-            if (!validDomain($d))
-                return returnError("Domain '$d' is not valid", $json);
+        if(isset($_REQUEST['target']) || isset($_REQUEST['domain']))
+        {
+            $existingEntries = getCustomCNAMEEntries();
+            foreach ($existingEntries as $entry)
+                if ($entry->domain == $domain)
+                    return returnError("There is already a CNAME record for $domain", $json);
         }
 
-        $existingEntries = getCustomCNAMEEntries();
-
-        // Check if a record for one of the domains already exists
-        foreach ($existingEntries as $entry)
-            foreach ($domains as $d)
-                if (in_array($d, $entry->domains))
-                    return returnError("There is already a CNAME record for '$d'", $json);
-
-        pihole_execute("-a addcustomcname ".$domain." ".$target." ".$reload);
+        if (uci_add("dhcp", "cname") !== 0) {
+            return returnError("Failed to create uci dhcp cname");
+        } else {
+            if (uci_set("dhcp", "@cname[-1]", "cname", $domain) !== 0) {
+                return returnError("Failed to set uci dhcp cname name: $domain");
+            }
+            if (uci_set("dhcp", "@cname[-1]", "target", $target) !== 0) {
+                return returnError("Failed to set uci dhcp cname target: $target");
+            }
+            uci_commit("dhcp");
+        }
 
         return returnSuccess("", $json);
     }
@@ -420,36 +489,22 @@ function deleteCustomCNAMEEntry()
         if (!$found)
             return returnError("This domain/ip association does not exist");
 
-        pihole_execute("-a removecustomcname ".$domain." ".$target);
-
-        return returnSuccess();
-    }
-    catch (\Exception $ex)
-    {
-        return returnError($ex->getMessage());
-    }
-}
-
-function deleteAllCustomCNAMEEntries($reload="")
-{
-    try
-    {
-        if(isset($_REQUEST['reload']))
-            $reload = $_REQUEST['reload'];
-
-        $existingEntries = getCustomCNAMEEntries();
-        // passing false to pihole_execute stops pihole from reloading after each enty has been deleted
-        foreach ($existingEntries as $entry) {
-            pihole_execute("-a removecustomcname ".$entry->domain." ".$entry->target." ".$reload);
+        preg_match("/config cname.*option cname \'$domain\'.*option target \'$target\'/s", file_get_contents("/etc/config/dhcp"), $matches);
+        if (strlen(implode($matches)) > 0) {
+            $count = substr_count(implode($matches), "config cname") - 1;
+            if (uci_del("dhcp", "@cname[$count]") !== 0) {
+                return returnError("Failed to delete DNS Record");
+            }
+            uci_commit("dhcp");
+            return returnSuccess();
+        } else {
+            return returnError("Cannot find CNAME Record (cname) index for $domain $target");
         }
-
     }
     catch (\Exception $ex)
     {
         return returnError($ex->getMessage());
     }
-
-    return returnSuccess();
 }
 
 function returnSuccess($message = "", $json = true)
--- a/scripts/pi-hole/php/groups.php
+++ b/scripts/pi-hole/php/groups.php
@@ -219,7 +219,7 @@ if ($_POST['action'] == 'get_groups') {
             if(!is_bool($name_result))
             {
                 $res['name'] = $name_result['name'];
-                error_log("IP: ".$name_result['name']);
+                // error_log("IP: ".$name_result['name']);
             }
             else
             {
@@ -549,7 +549,7 @@ if ($_POST['action'] == 'get_groups') {
                 // scheduled for removal with PHP 8.0
                 // see https://wiki.php.net/rfc/deprecate-and-remove-intl_idna_variant_2003
                 if ($utf8_domain === false && defined("INTL_IDNA_VARIANT_2003")) {
-                    $utf8_domain = idn_to_utf8($res['domain'], IDNA_DEFAULT, INTL_IDNA_VARIANT_2003);
+                    $utf8_domain = idn_to_utf8($res['domain'], IDNA_NONTRANSITIONAL_TO_ASCII, INTL_IDNA_VARIANT_UTS46);
                 }
 
                 // Convert domain name to international form
@@ -644,7 +644,7 @@ if ($_POST['action'] == 'get_groups') {
                     $idn_domain = idn_to_ascii($domain, IDNA_NONTRANSITIONAL_TO_ASCII, INTL_IDNA_VARIANT_UTS46);
                 }
                 if ($idn_domain === false && defined("INTL_IDNA_VARIANT_2003")) {
-                    $idn_domain = idn_to_ascii($domain, IDNA_DEFAULT, INTL_IDNA_VARIANT_2003);
+                    $idn_domain = idn_to_ascii($domain, IDNA_NONTRANSITIONAL_TO_ASCII, INTL_IDNA_VARIANT_UTS46);
                 }
                 if($idn_domain !== false) {
                     $domain = $idn_domain;
--- a/scripts/pi-hole/php/header.php
+++ b/scripts/pi-hole/php/header.php
@@ -11,6 +11,8 @@
     require_once "scripts/pi-hole/php/FTL.php";
     require_once "scripts/pi-hole/php/func.php";
     require "scripts/pi-hole/php/theme.php";
+    require_once "scripts/pi-hole/php/update_checker.php";
+
     $scriptname = basename($_SERVER['SCRIPT_FILENAME']);
     $hostname = gethostname() ? gethostname() : "";
 
@@ -51,16 +53,7 @@
             // Use multiplication to get around the division-by-zero error
             $celsius *= 1e-3;
         }
-
-        // Get user-defined temperature limit if set
-        if(isset($setupVars['TEMPERATURE_LIMIT']))
-        {
-            $temperaturelimit = intval($setupVars['TEMPERATURE_LIMIT']);
-        }
-        else
-        {
-            $temperaturelimit = 60;
-        }
+        $temperaturelimit = 60;
     }
     else
     {
@@ -119,20 +112,10 @@
         $token = $_SESSION['token'];
     }
 
-    if(isset($setupVars['WEBUIBOXEDLAYOUT']))
-    {
-        if($setupVars['WEBUIBOXEDLAYOUT'] === "boxed")
-        {
-            $boxedlayout = true;
-        }
-        else
-        {
-            $boxedlayout = false;
-        }
-    }
-    else
-    {
-        $boxedlayout = true;
+    $boxedlayout = true;
+    $fluid = intval(uci_get("pihole", "@pihole[0]", "web_fluid"));
+    if($fluid === 1) {
+        $boxedlayout = false;
     }
 
     // Override layout setting if layout is changed via Settings page
@@ -155,7 +138,11 @@
     $FTLpid = intval(pidofFTL());
     $FTL = ($FTLpid !== 0 ? true : false);
 
-    $piholeFTLConf = piholeFTLConfig();
+    $piHoleInterface = uci_get("pihole", "@pihole[0]", "interface");
+    if (!isset($piHoleInterface)) {
+        $piHoleInterface = "lan";
+    }
+    $piHoleIfname = uci_get("network", $piHoleInterface, "device");
 ?>
 <!doctype html>
 <!-- Pi-hole: A black hole for Internet advertisements
@@ -533,7 +520,7 @@ if($auth) {
                     </a>
                 </li>
                 <!-- Tools -->
-                <li class="treeview<?php if (in_array($scriptname, array("messages.php", "gravity.php", "queryads.php", "auditlog.php", "taillog.php", "taillog-FTL.php", "debug.php", "network.php"))){ ?> active<?php } ?>">
+                <li class="treeview<?php if (in_array($scriptname, array("messages.php", "gravity.php", "queryads.php", "auditlog.php", "taillog.php", "taillog-FTL.php", "network.php"))){ ?> active<?php } ?>">
                   <a href="#">
                     <i class="fa fa-fw menu-icon fa-folder"></i> <span>Tools</span>
                     <span class="pull-right-container">
@@ -577,12 +564,6 @@ if($auth) {
                             <i class="fa fa-fw menu-icon fa-list-ul"></i> Tail pihole-FTL.log
                         </a>
                     </li>
-                    <!-- Generate debug log -->
-                    <li<?php if($scriptname === "debug.php"){ ?> class="active"<?php } ?>>
-                        <a href="debug.php">
-                            <i class="fa fa-fw menu-icon fa-ambulance"></i> Generate debug log
-                        </a>
-                    </li>
                     <!-- Network -->
                     <li<?php if($scriptname === "network.php"){ ?> class="active"<?php } ?>>
                         <a href="network.php">
@@ -661,7 +642,7 @@ if($auth) {
         <section class="content">
 <?php
     // If password is not equal to the password set
-    // in the setupVars.conf file, then we skip any
+    // in the config file, then we skip any
     // content and just complete the page. If no
     // password is set at all, we keep the current
     // behavior: everything is always authorized
--- a/scripts/pi-hole/php/password.php
+++ b/scripts/pi-hole/php/password.php
@@ -15,14 +15,8 @@
     ini_set('session.use_only_cookies', 1);
     session_start();
 
-    // Read setupVars.conf file
-    $setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-    // Try to read password hash from setupVars.conf
-    if(isset($setupVars['WEBPASSWORD']))
-    {
-        $pwhash = $setupVars['WEBPASSWORD'];
-    }
-    else
+    $pwhash = uci_get("pihole", "@pihole[0]", "web_password");
+    if(!isset($pwhash))
     {
         $pwhash = "";
     }
--- a/scripts/pi-hole/php/savesettings.php
+++ b/scripts/pi-hole/php/savesettings.php
@@ -35,38 +35,39 @@ function formatMAC($mac_addr)
 }
 
 $dhcp_static_leases = array();
-function readStaticLeasesFile($origin_file="/etc/dnsmasq.d/04-pihole-static-dhcp.conf")
+function readStaticLeasesFile()
 {
 	global $dhcp_static_leases;
 	$dhcp_static_leases = array();
-	if(!file_exists($origin_file) || !is_readable($origin_file))
-		return false;
+	$idx = substr_count(file_get_contents("/etc/config/dhcp"), "config host") - 1;
 
-	$dhcpstatic = @fopen($origin_file, 'r');
-	if(!is_resource($dhcpstatic))
-		return false;
+	if ($idx < 0) {
+		return false;
+	}
 
-	while(!feof($dhcpstatic))
+	for($i = 0; $i <= $idx; $i++)
 	{
-		// Remove any possibly existing variable with this name
-		$mac = ""; $one = ""; $two = "";
-		sscanf(trim(fgets($dhcpstatic)),"dhcp-host=%[^,],%[^,],%[^,]",$mac,$one,$two);
-		if(strlen($mac) > 0 && validMAC($mac))
+		$mac = ""; $ip = ""; $host = ""; $duid = ""; $hostid = "";
+		$mac = uci_get("dhcp", "@host[$i]", "mac");
+		$ip = uci_get("dhcp", "@host[$i]", "ip");
+		$host = uci_get("dhcp", "@host[$i]", "name");
+		$duid = uci_get("dhcp", "@host[$i]", "duid");
+		$hostid = uci_get("dhcp", "@host[$i]", "hostid");
+		if(isset($duid) && strpos($duid, ':') === false)
 		{
-			if(validIP($one) && strlen($two) == 0)
-				// dhcp-host=mac,IP - no HOST
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>$one, "host"=>""]);
-			elseif(strlen($two) == 0)
-				// dhcp-host=mac,hostname - no IP
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>"", "host"=>$one]);
-			else
-				// dhcp-host=mac,IP,hostname
-				array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>$one, "host"=>$two]);
+			$duid = wordwrap($duid, 2, ':', true);
 		}
-		else if(validIP($one) && validDomain($mac))
+		else if(!isset($duid))
 		{
-			// dhcp-host=hostname,IP - no MAC
-			array_push($dhcp_static_leases,["hwaddr"=>"", "IP"=>$one, "host"=>$mac]);
+			$duid = "none";
+		}
+		if(!isset($hostid))
+		{
+			$hostid = "none";
+		}
+		if(strlen($mac) > 0 && validMAC($mac))
+		{
+			array_push($dhcp_static_leases,["hwaddr"=>$mac, "IP"=>$ip, "host"=>$host, "duid"=>$duid, "hostid"=>$hostid]);
 		}
 	}
 	return true;
@@ -129,7 +130,7 @@ function readDNSserversList()
 
 require_once("database.php");
 
-function addStaticDHCPLease($mac, $ip, $hostname) {
+function addStaticDHCPLease($mac, $ip, $hostname, $duid, $hostid) {
 	global $error, $success, $dhcp_static_leases;
 
 	try {
@@ -154,12 +155,30 @@ function addStaticDHCPLease($mac, $ip, $
 			throw new Exception("You can not omit both the IP address and the host name!<br>", 3);
 		}
 
+		if (strlen($hostid) > 4 || !trim($hostid, '0..9A..Fa..f') == '')
+		{
+			throw new Exception("Hostid (".htmlspecialchars($hostid).") should be HEX format and no more than 4 characters!<br>", 4);
+		}
+
+		if (strlen($duid) > 0 && (strlen($duid) < 20 || strlen($duid) > 42))
+		{
+			throw new Exception("DUID (".htmlspecialchars($hostid).") is invalid!<br>", 5);
+		}
+
 		if(strlen($hostname) == 0)
 			$hostname = "nohost";
 
 		if(strlen($ip) == 0)
 			$ip = "noip";
 
+		if(strlen($duid) == 0) {
+			$duid = "noduid";
+		}
+
+		if(strlen($hostid) == 0) {
+			$hostid = "nohostid";
+		}
+
 		// Test if this lease is already included
 		readStaticLeasesFile();
 
@@ -176,10 +195,51 @@ function addStaticDHCPLease($mac, $ip, $
 			{
 				throw new Exception("Static lease for hostname (".htmlspecialchars($hostname).") already defined!<br>", 6);
 			}
+			if($lease["hostid"] === $hostid)
+			{
+				throw new Exception("Static lease for hostid (".htmlspecialchars($hostname).") already defined!<br>", 6);
+			}
+			if($lease["duid"] === $duid)
+			{
+				throw new Exception("Static lease for DUID (".htmlspecialchars($hostname).") already defined!<br>", 6);
+			}
 		}
 
-		pihole_execute("-a addstaticdhcp ".$mac." ".$ip." ".$hostname);
-		$success .= "A new static address has been added";
+		if (uci_add("dhcp", "host") !== 0) {
+			throw new Exception("Failed to create uci dhcp host!<br>", 4);
+		} else {
+			if (uci_set("dhcp", "@host[-1]", "mac", $mac) !== 0) {
+				throw new Exception("Failed to set uci dhcp host mac (".htmlspecialchars($mac).")!<br>", 4);
+			}
+
+			// double check everything else
+			if(validDomain($hostname) && $hostname !== "nohost") {
+				if (uci_set("dhcp", "@host[-1]", "name", $hostname) !== 0) {
+		    		throw new Exception("Failed to set uci dhcp host name (".htmlspecialchars($hostname).")!<br>", 4);
+				}
+			}
+
+			if(validIP($ip) && $ip !== "noip") {
+				if (uci_set("dhcp", "@host[-1]", "ip", $ip) !== 0) {
+		    		throw new Exception("Failed to set uci dhcp host ip (".htmlspecialchars($ip).")!<br>", 4);
+				}
+			}
+
+			if($hostid !== "nohostid") {
+				if (uci_set("dhcp", "@host[-1]", "hostid", $hostid) !== 0) {
+		    		throw new Exception("Failed to set uci dhcp host hostid (".htmlspecialchars($hostid).")!<br>", 4);
+				}
+			}
+
+			if($duid !== "noduid") {
+				if (uci_set("dhcp", "@host[-1]", "duid", $duid) !== 0) {
+		    		throw new Exception("Failed to set uci dhcp host duid (".htmlspecialchars($duid).")!<br>", 4);
+				}
+			}
+
+			uci_commit("dhcp");
+			$success .= "A new static address has been added";
+		}
 		return true;
 	} catch(Exception $exception) {
 		$error .= $exception->getMessage();
@@ -204,6 +264,7 @@ function addStaticDHCPLease($mac, $ip, $
 			case "DNS":
 
 				$DNSservers = [];
+				$commit = false;
 				// Add selected predefined servers to list
 				foreach ($DNSserverslist as $key => $value)
 				{
@@ -265,63 +326,50 @@ function addStaticDHCPLease($mac, $ip, $
 				}
 
 				// Check if domain-needed is requested
-				if(isset($_POST["DNSrequiresFQDN"]))
-				{
-					$extra = "domain-needed ";
-				}
-				else
-				{
-					$extra = "domain-not-needed ";
+				$domain_needed = intval(uci_get("dhcp", "@dnsmasq[0]", "domainneeded"));
+				if(isset($_POST["DNSrequiresFQDN"])) {
+					if ($domain_needed !== 1) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "domainneeded", 1) === 0) {
+							$commit = true;
+						}
+					}
+				} else {
+					if ($domain_needed !== 0) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "domainneeded", 0) === 0) {
+							$commit = true;
+						}
+					}
 				}
 
+				$bogus_priv = intval(uci_get("dhcp", "@dnsmasq[0]", "boguspriv"));
 				// Check if domain-needed is requested
-				if(isset($_POST["DNSbogusPriv"]))
-				{
-					$extra .= "bogus-priv ";
-				}
-				else
-				{
-					$extra .= "no-bogus-priv ";
-				}
-
-				// Check if DNSSEC is requested
-				if(isset($_POST["DNSSEC"]))
-				{
-					$extra .= "dnssec";
-				}
-				else
-				{
-					$extra .= "no-dnssec";
-				}
-
-				// Check if rev-server is requested
-				if(isset($_POST["rev_server"]))
-				{
-					// Validate CIDR IP
-					$cidr = trim($_POST["rev_server_cidr"]);
-					if (!validCIDRIP($cidr))
-					{
-						$error .= "Conditional forwarding subnet (\"".htmlspecialchars($cidr)."\") is invalid!<br>".
-						          "This field requires CIDR notation for local subnets (e.g., 192.168.0.0/16).<br>";
+				if(isset($_POST["DNSbogusPriv"])) {
+					if ($bogus_priv !== 1) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "boguspriv", 1) === 0) {
+							$commit = true;
+						}
 					}
-
-					// Validate target IP
-					$target = trim($_POST["rev_server_target"]);
-					if (!validIP($target))
-					{
-						$error .= "Conditional forwarding target IP (\"".htmlspecialchars($target)."\") is invalid!<br>";
+				} else {
+					if ($bogus_priv !== 0) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "boguspriv", 0) === 0) {
+							$commit = true;
+						}
 					}
+				}
 
-					// Validate conditional forwarding domain name (empty is okay)
-					$domain = trim($_POST["rev_server_domain"]);
-					if(strlen($domain) > 0 && !validDomain($domain))
-					{
-						$error .= "Conditional forwarding domain name (\"".htmlspecialchars($domain)."\") is invalid!<br>";
+				$dnssec_uci = intval(uci_get("dhcp", "@dnsmasq[0]", "dnssec"));
+				// Check if DNSSEC is requested
+				if(isset($_POST["DNSSEC"])) {
+					if ($dnssec_uci !== 1) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "dnssec", 1) === 0) {
+							$commit = true;
+						}
 					}
-
-					if(!$error)
-					{
-						$extra .= " rev-server ".$cidr." ".$target." ".$domain;
+				} else {
+					if ($dnssec_uci !== 0) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "dnssec", 0) === 0) {
+							$commit = true;
+						}
 					}
 				}
 
@@ -332,10 +380,6 @@ function addStaticDHCPLease($mac, $ip, $
 					{
 						$DNSinterface = "single";
 					}
-					elseif($_POST["DNSinterface"] === "bind")
-					{
-						$DNSinterface = "bind";
-					}
 					elseif($_POST["DNSinterface"] === "all")
 					{
 						$DNSinterface = "all";
@@ -350,15 +394,104 @@ function addStaticDHCPLease($mac, $ip, $
 					// Fallback
 					$DNSinterface = "local";
 				}
-				pihole_execute("-a -i ".$DNSinterface." -web");
+				$old_notinterface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "notinterface"));
+				$old_localservice = intval(uci_get("dhcp", "@dnsmasq[0]", "localservice"));
+				$old_interface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "interface"));
+				if ($DNSinterface === "local") {
+                	if (in_array("nonexisting", $old_notinterface)) {
+						if (uci_del("dhcp", "@dnsmasq[0]", "notinterface", "nonexisting", "list") === 0) {
+							$commit = true;
+						}
+                	}
+
+					if ($old_localservice !== 1) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "localservice", 1) === 0) {
+							$commit = true;
+							$success .= "Interface settings has been updated to Local Service only<br>";
+						}
+					}
+
+                	if (in_array($piHoleInterface, $old_interface)) {
+						if (uci_del("dhcp", "@dnsmasq[0]", "interface", $piHoleInterface, "list") === 0) {
+							$commit = true;
+						}
+                	}
+				}
+				elseif ($DNSinterface === "all") {
+                	if (!in_array("nonexisting", $old_notinterface)) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "notinterface", "nonexisting", "list") === 0) {
+							$commit = true;
+							$success .= "Interface settings has been updated to All Origins<br>";
+							$success .= "Please make sure FIREWALL properly configured!<br>";
+						}
+					}
+
+					if ($old_localservice !== 0) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "localservice", 0) === 0) {
+							$commit = true;
+						}
+					}
+
+                	if (in_array($piHoleInterface, $old_interface)) {
+						if (uci_del("dhcp", "@dnsmasq[0]", "interface", $piHoleInterface, "list") === 0) {
+							$commit = true;
+						}
+                	}
+				}
+				elseif ($DNSinterface === "single") {
+                	if (in_array("nonexisting", $old_notinterface)) {
+						if (uci_del("dhcp", "@dnsmasq[0]", "notinterface", "nonexisting", "list") === 0) {
+							$commit = true;
+						}
+                	}
+
+					if ($old_localservice !== 0) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "localservice", 0) === 0) {
+							$commit = true;
+						}
+					}
+
+                	if (!in_array($piHoleInterface, $old_interface)) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "interface", $piHoleInterface, "list") === 0){
+							$commit = true;
+							$success .= "Interface settings has been updated to Single Interface ($piHoleIfname)<br>";
+						}
+					}
+				}
 
 				// If there has been no error we can save the new DNS server IPs
 				if(!strlen($error))
 				{
-					$IPs = implode (",", $DNSservers);
-					$return = pihole_execute("-a setdns \"".$IPs."\" ".$extra);
-					$success .= htmlspecialchars(end($return))."<br>";
-					$success .= "The DNS settings have been updated (using ".$DNSservercount." DNS servers)";
+					$IPs = implode (" ", $DNSservers);
+					$oldServers = uci_get("dhcp", "@dnsmasq[0]", "server");
+
+					if ($IPs !== $oldServers) {
+						if (isset($oldServers)) {
+							if (uci_del("dhcp", "@dnsmasq[0]", "server") === 0) {
+								$commit = true;
+							} else {
+								$error .= "Failed to delete dnsmasq server list!<br>";
+							}
+						}
+
+						foreach($DNSservers as $dns) {
+							if (uci_set("dhcp", "@dnsmasq[0]", "server", $dns, "list") === 0) {
+								$commit = true;
+							} else {
+								$error .= "Failed to set DNS Server entry ".htmlspecialchars($dns)."!<br>";
+							}
+						}
+					}
+					if ($commit) {
+						$success .= "The DNS settings have been updated (using ".$DNSservercount." DNS servers)<br>";
+						uci_commit("dhcp");
+						if(isset($_POST["restartFTL"])) {
+							$success .= "Applying changes (FTL Restarted)";
+							pihole_execute("-a restartdns");
+						}
+					} else {
+						$success .= "No Settings has been changed.";
+					}
 				}
 				else
 				{
@@ -396,123 +529,175 @@ function addStaticDHCPLease($mac, $ip, $
 				// array_filter( ... ) will remove any empty lines
 				$domains = array_filter(preg_split('/\r\n|[\r\n]/', $_POST["domains"]));
 				$clients = array_filter(preg_split('/\r\n|[\r\n]/', $_POST["clients"]));
+				$commit = false;
 
-				$domainlist = "";
-				$first = true;
-				foreach($domains as $domain)
-				{
-					if(!validDomainWildcard($domain) || validIP($domain))
-					{
-						$error .= "Top Domains/Ads entry ".htmlspecialchars($domain)." is invalid (use only domains)!<br>";
-					}
-					if(!$first)
-					{
-						$domainlist .= ",";
+				$oldDomains = uci_get("pihole", "@pihole[0]", "api_exclude_domains");
+				$savedDomains = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_domains"));
+				if ($domains !== $savedDomains) {
+					if (isset($oldDomains)) {
+						if (uci_del("pihole", "@pihole[0]", "api_exclude_domains") === 0) {
+							$commit = true;
+						} else {
+							$error .= "Failed to delete api_exclude_domains list!<br>";
+						}
 					}
-					else
+
+					foreach($domains as $domain)
 					{
-						$first = false;
+						if(!validDomainWildcard($domain) || validIP($domain))
+						{
+							$error .= "Top Domains/Ads entry ".htmlspecialchars($domain)." is invalid (use only domains)!<br>";
+							continue;
+						}
+
+						if (uci_set("pihole", "@pihole[0]", "api_exclude_domains", $domain, "list") === 0) {
+							$commit = true;
+						} else {
+							$error .= "Failed to set Top Domains/Ads entry ".htmlspecialchars($domain)."!<br>";
+						}
 					}
-					$domainlist .= $domain;
 				}
 
-				$clientlist = "";
-				$first = true;
-				foreach($clients as $client)
-				{
-					if(!validDomainWildcard($client) && !validIP($client))
-					{
-						$error .= "Top Clients entry ".htmlspecialchars($client)." is invalid (use only host names and IP addresses)!<br>";
-					}
-					if(!$first)
-					{
-						$clientlist .= ",";
+				$oldClients = uci_get("pihole", "@pihole[0]", "api_exclude_clients");
+				$savedClients = explode(" ", $oldClients);
+				if ($clients !== $savedClients) {
+					if (isset($oldClients)) {
+						if (uci_del("pihole", "@pihole[0]", "api_exclude_clients") === 0) {
+							$commit = true;
+						} else {
+							$error .= "Failed to delete api_exclude_clients list!<br>";
+						}
 					}
-					else
+
+					foreach($clients as $client)
 					{
-						$first = false;
-					}
-					$clientlist .= $client;
-				}
+						if(!validDomainWildcard($client) && !validIP($client))
+						{
+							$error .= "Top Clients entry ".htmlspecialchars($client)." is invalid (use only host names and IP addresses)!<br>";
+							continue;
+						}
 
-				// Set Top Lists options
-				if(!strlen($error))
-				{
-					// All entries are okay
-					pihole_execute("-a setexcludedomains ".$domainlist);
-					pihole_execute("-a setexcludeclients ".$clientlist);
-					$success .= "The API settings have been updated<br>";
-				}
-				else
-				{
-					$error .= "The settings have been reset to their previous values";
+						if (uci_set("pihole", "@pihole[0]", "api_exclude_clients", $client, "list") === 0) {
+							$commit = true;
+						} else {
+							$error .= "Failed to set Top Clients entry ".htmlspecialchars($client)."!<br>";
+						}
+					}
 				}
 
 				// Set query log options
+				$api_query = uci_get("pihole", "@pihole[0]", "api_query_log_show");
 				if(isset($_POST["querylog-permitted"]) && isset($_POST["querylog-blocked"]))
 				{
-					pihole_execute("-a setquerylog all");
-					$success .= "All entries will be shown in Query Log";
+					if ($api_query !== "all") {
+						if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "all") === 0) {
+							$commit = true;
+							$success .= "All entries will be shown in Query Log<br>";
+						} else {
+							$error .= "Failed to set api_query_log_show to all<br>";
+						}
+					}
 				}
 				elseif(isset($_POST["querylog-permitted"]))
 				{
-					pihole_execute("-a setquerylog permittedonly");
-					$success .= "Only permitted will be shown in Query Log";
+					if ($api_query !== "permittedonly") {
+						if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "permittedonly") === 0) {
+							$commit = true;
+							$success .= "Only permitted will be shown in Query Log<br>";
+						} else {
+							$error .= "Failed to set api_query_log_show to permittedonly<br>";
+						}
+					}
 				}
 				elseif(isset($_POST["querylog-blocked"]))
 				{
-					pihole_execute("-a setquerylog blockedonly");
-					$success .= "Only blocked entries will be shown in Query Log";
+					if ($api_query !== "blockedonly") {
+						if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "blockedonly") === 0) {
+							$commit = true;
+							$success .= "Only blocked entries will be shown in Query Log<br>";
+						} else {
+							$error .= "Failed to set api_query_log_show to blockedonly<br>";
+						}
+					}
+				}
+				else
+				{
+					if ($api_query !== "nothing") {
+						if (uci_set("pihole", "@pihole[0]", "api_query_log_show", "nothing") === 0) {
+							$commit = true;
+							$success .= "No entries will be shown in Query Log<br>";
+						} else {
+							$error .= "Failed to set api_query_log_show to nothing<br>";
+						}
+					}
+				}
+
+				if(!strlen($error))
+				{
+					if ($commit) {
+						$success .= "The API settings have been updated<br>";
+						uci_commit("pihole");
+						pihole_execute("restartdns reload-lists");
+					}
 				}
 				else
 				{
-					pihole_execute("-a setquerylog nothing");
-					$success .= "No entries will be shown in Query Log";
+					$error .= "The settings have been reset to their previous values";
 				}
 
 				break;
 
 			case "webUI":
-				$adminemail = trim($_POST["adminemail"]);
-				if(strlen($adminemail) == 0 || !isset($adminemail))
+                $adminemail = uci_get("pihole", "@pihole[0]", "admin_email");
+				$admin_email = trim($_POST["adminemail"]);
+				if(strlen($admin_email) == 0 || !isset($admin_email))
 				{
-					$adminemail = '';
+					$admin_email = '';
 				}
-				if(strlen($adminemail) > 0 && !validEmail($adminemail))
+				if(strlen($admin_email) > 0 && !validEmail($admin_email))
 				{
-					$error .= "Administrator email address (".htmlspecialchars($adminemail).") is invalid!<br>";
+					$error .= "Administrator email address (".htmlspecialchars($admin_email).") is invalid!<br>";
 				}
 				else
 				{
-					pihole_execute('-a -e \''.$adminemail.'\'');
+					if ($adminemail != $admin_email) {
+						if (uci_set("pihole", "@pihole[0]", "admin_email", $admin_email) === 0) {
+							uci_commit("pihole");
+						}
+					}
 				}
+				$fluid = intval(uci_get("pihole", "@pihole[0]", "web_fluid"));
 				if(isset($_POST["boxedlayout"]))
 				{
-					pihole_execute('-a layout boxed');
+					if ($fluid !== 0) {
+						if (uci_del("pihole", "@pihole[0]", "web_fluid") === 0) {
+							uci_commit("pihole");
+						}
+					}
 				}
 				else
 				{
-					pihole_execute('-a layout traditional');
+					if ($fluid !== 1) {
+						if (uci_set("pihole", "@pihole[0]", "web_fluid", 1) === 0) {
+							uci_commit("pihole");
+						}
+					}
 				}
+                $web_theme = uci_get("pihole", "@pihole[0]", "web_theme");
 				if(isset($_POST["webtheme"]))
 				{
 					global $available_themes;
-					if(array_key_exists($_POST["webtheme"], $available_themes))
-						exec('sudo pihole -a theme '.$_POST["webtheme"]);
+					if(array_key_exists($_POST["webtheme"], $available_themes)) {
+						if ($web_theme != $_POST["webtheme"]) {
+							if (uci_set("pihole", "@pihole[0]", "web_theme", $_POST["webtheme"]) === 0) {
+								uci_commit("pihole");
+							}
+						}
+					}
 				}
 				$success .= "The webUI settings have been updated";
 				break;
 
-			case "poweroff":
-				pihole_execute("-a poweroff");
-				$success = "The system will poweroff in 5 seconds...";
-				break;
-
-			case "reboot":
-				pihole_execute("-a reboot");
-				$success = "The system will reboot in 5 seconds...";
-				break;
-
 			case "restartdns":
 				pihole_execute("-a restartdns");
 				$success = "The DNS server has been restarted";
@@ -524,14 +709,15 @@ function addStaticDHCPLease($mac, $ip, $
 				break;
 
 			case "DHCP":
-
 				if(isset($_POST["addstatic"]))
 				{
 					$mac = trim($_POST["AddMAC"]);
 					$ip = trim($_POST["AddIP"]);
 					$hostname = trim($_POST["AddHostname"]);
+					$duid = trim($_POST["AddDUID"]);
+					$hostid = trim($_POST["AddHostID"]);
 
-					addStaticDHCPLease($mac, $ip, $hostname);
+					addStaticDHCPLease($mac, $ip, $hostname, $duid, $hostid);
 					break;
 				}
 
@@ -546,81 +732,175 @@ function addStaticDHCPLease($mac, $ip, $
 
 					if(!strlen($error))
 					{
-						pihole_execute("-a removestaticdhcp ".$mac);
-						$success .= "The static address with MAC address ".htmlspecialchars($mac)." has been removed";
+						preg_match("/config host.*option mac \'$mac\'/s", file_get_contents("/etc/config/dhcp"), $matches);
+						if (strlen(implode($matches)) > 0) {
+							$count = substr_count(implode($matches), "config host") - 1;
+							if (uci_del("dhcp", "@host[$count]") === 0) {
+								uci_commit("dhcp");
+								$success .= "The static address with MAC address ".htmlspecialchars($mac)." has been removed";
+							} else {
+								$error .= "Failed to delete Static DHCP of (".htmlspecialchars($mac)."). Command Failed!<br>";
+							}
+						} else {
+							$error .= "Failed to delete Static DHCP of (".htmlspecialchars($mac)."). Unknown Index!<br>";
+						}
 					}
 					break;
 				}
 
 				if(isset($_POST["active"]))
 				{
+					$commit_dhcp = false;
+					$commit_net = false;
 					// Validate from IP
-					$from = $_POST["from"];
-					if (!validIP($from))
+					$startdhcp = intval(uci_get("dhcp", $piHoleInterface, "start"));
+					$from = intval($_POST["from"]);
+					if (!($from > 1) && ($from < 255))
 					{
 						$error .= "From IP (".htmlspecialchars($from).") is invalid!<br>";
 					}
+					else
+					{
+						if ($from !== $startdhcp) {
+							if (uci_set("dhcp", $piHoleInterface, "start", $from) === 0) {
+								$commit_dhcp = true;
+							}
+						}
+					}
 
 					// Validate to IP
-					$to = $_POST["to"];
-					if (!validIP($to))
+					$to = intval($_POST["to"]);
+					$enddhcp = $to - $from;
+					$limit = intval(uci_get("dhcp", $piHoleInterface, "limit"));
+					if (!(2 <= $to) && ($to <= 254))
 					{
 						$error .= "To IP (".htmlspecialchars($to).") is invalid!<br>";
 					}
+					else
+					{
+						if ($enddhcp !== $limit) {
+							if (uci_set("dhcp", $piHoleInterface, "limit", $enddhcp) === 0) {
+								$commit_dhcp = true;
+							}
+						}
+					}
 
 					// Validate router IP
 					$router = $_POST["router"];
+					$router = uci_get("network", $piHoleInterface, "ipaddr");
 					if (!validIP($router))
 					{
 						$error .= "Router IP (".htmlspecialchars($router).") is invalid!<br>";
 					}
+					//else
+					//{
+					//	if (validIP($routerip))
+					//		if ($router !== $routerip)
+					//			if (uci_set("network", $piHoleInterface, "ipaddr", $router) === 0)
+					//				$commit_net = true;
+					//}
 
 					$domain = $_POST["domain"];
 
 					// Validate Domain name
+					$dom = uci_get("dhcp", $piHoleInterface, "domain_iface");
 					if(!validDomain($domain))
 					{
 						$error .= "Domain name ".htmlspecialchars($domain)." is invalid!<br>";
 					}
+					else
+					{
+						if ($dom !== $domain) {
+							if (uci_set("dhcp", $piHoleInterface, "domain_iface", $domain) === 0) {
+								$commit_dhcp = true;
+							}
+						}
+					}
 
-					$leasetime = $_POST["leasetime"];
+					$leasetime = intval($_POST["leasetime"]);
 
 					// Validate Lease time length
-					if(!is_numeric($leasetime) || intval($leasetime) < 0)
+					$ltime = intval(preg_replace('~\D~', '', uci_get("dhcp", $piHoleInterface, "leasetime")));
+					if(!is_numeric($leasetime) || $leasetime < 0)
 					{
 						$error .= "Lease time ".htmlspecialchars($leasetime)." is invalid!<br>";
 					}
+					else
+					{
+						if ($ltime !== $leasetime) {
+							if (uci_set("dhcp", $piHoleInterface, "leasetime", $leasetime . "h") === 0) {
+								$commit_dhcp = true;
+							}
+						}
+					}
 
-					if(isset($_POST["useIPv6"]))
+					$rapid_commit = intval(uci_get("dhcp", "@dnsmasq[0]", "rapidcommit"));
+					if(isset($_POST["DHCP_rapid_commit"]))
 					{
-						$ipv6 = "true";
-						$type = "(IPv4 + IPv6)";
+						if ($rapid_commit !== 1) {
+							if (uci_set("dhcp", "@dnsmasq[0]", "rapidcommit", 1) === 0) {
+								$commit_dhcp = true;
+							}
+						}
 					}
 					else
 					{
-						$ipv6 = "false";
-						$type = "(IPv4)";
+						if ($rapid_commit !== 0) {
+							if (uci_set("dhcp", "@dnsmasq[0]", "rapidcommit", 0) === 0) {
+								$commit_dhcp = true;
+							}
+						}
 					}
 
-					if(isset($_POST["DHCP_rapid_commit"]))
+					$sequential = intval(uci_get("dhcp", "@dnsmasq[0]", "sequential_ip"));
+					if(isset($_POST["DHCP_sequential"]))
 					{
-						$rapidcommit = "true";
+						if ($sequential !== 1) {
+							if (uci_set("dhcp", "@dnsmasq[0]", "sequential_ip", 1) === 0) {
+								$commit_dhcp = true;
+							}
+						}
 					}
 					else
 					{
-						$rapidcommit = "false";
+						if ($sequential !== 0) {
+							if (uci_set("dhcp", "@dnsmasq[0]", "sequential_ip", 0) === 0) {
+								$commit_dhcp = true;
+							}
+						}
+					}
+
+					$leasefile = $_POST["leasefile"];
+					$leasefileold = uci_get("dhcp", "@dnsmasq[0]", "leasefile");
+					if ($leasefile !== $leasefileold) {
+						if (uci_set("dhcp", "@dnsmasq[0]", "leasefile", $leasefile) === 0) {
+							$commit_dhcp = true;
+						}
 					}
 
 					if(!strlen($error))
 					{
-						pihole_execute("-a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
-						$success .= "The DHCP server has been activated ".htmlspecialchars($type);
+						if ($commit_dhcp) {
+							uci_commit("dhcp");
+							$success .= "The DHCP server has been Modified<br>";
+							if(isset($_POST["restartFTL"])) {
+								$success .= "Applying changes (FTL Restarted)";
+								pihole_execute("-a restartdns");
+							}
+						} else {
+							$success .= "No Settings has been changed.";
+						}
+						if ($commit_net) {
+							uci_commit("network");
+							$success .= "<h4 style=\"text-align: center;\">ATTENTION!!!<br>";
+							$success .= "The Router IP has been modified.<br>";
+							$success .= "Please reboot to apply a new IP!</h4><br>";
+						}
 					}
 				}
 				else
 				{
-					pihole_execute("-a disabledhcp");
-					$success = "The DHCP server has been deactivated";
+					$error .= "DHCP server is not enabled";
 				}
 
 				break;
@@ -630,27 +910,30 @@ function addStaticDHCPLease($mac, $ip, $
 				if($level >= 0 && $level <= 4)
 				{
 					// Check if privacylevel is already set
-					if (isset($piholeFTLConf["PRIVACYLEVEL"])) {
-						$privacylevel = intval($piholeFTLConf["PRIVACYLEVEL"]);
-					} else {
+					$privacylvl = uci_get("pihole", "@pihole[0]", "privacylevel");
+					if (!isset($privacylvl)) {
 						$privacylevel = 0;
+					} else {
+						$privacylevel = intval($privacylvl);
 					}
 
-					// Store privacy level
-					pihole_execute("-a privacylevel ".$level);
-
-					if($privacylevel > $level)
-					{
-						pihole_execute("-a restartdns");
-						$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
-					}
-					elseif($privacylevel < $level)
-					{
-						$success .= "The privacy level has been increased";
-					}
-					else
-					{
-						$success .= "The privacy level has not been changed";
+					if (uci_set("pihole", "@pihole[0]", "privacylevel", $level) !== 0) {
+						$error .= "Uci: Error has occurred while trying to set privacylevel to $level";
+					} else {
+						uci_commit("pihole");
+						if($privacylevel > $level)
+						{
+							pihole_execute("-a restartdns");
+							$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
+						}
+						elseif($privacylevel < $level)
+						{
+							$success .= "The privacy level has been increased";
+						}
+						else
+						{
+							$success .= "The privacy level has not been changed";
+						}
 					}
 				}
 				else
--- a/scripts/pi-hole/php/theme.php
+++ b/scripts/pi-hole/php/theme.php
@@ -21,10 +21,10 @@ $available_themes["default-auto"] = arra
 $available_themes["lcars"] = array("Star Trek LCARS theme (dark)", true, "lcars");
 
 
-$webtheme = "";
-// Try to load theme settings from setupVars.conf
-if(isset($setupVars['WEBTHEME']))
-    $webtheme = $setupVars['WEBTHEME'];
+$webtheme = uci_get("pihole", "@pihole[0]", "web_theme");
+if(!isset($webtheme)) {
+    $webtheme = "";
+}
 
 // May be overwritten by settings tab
 if(isset($_POST["field"]) &&
--- a/scripts/pi-hole/php/update_checker.php
+++ b/scripts/pi-hole/php/update_checker.php
@@ -1,98 +1,41 @@
 <?php
+$pihole = "/usr/lib/opkg/info/pihole.control";
+$pihole_FTL = "/usr/lib/opkg/info/pihole-FTL.control";
+$pihole_web = "/usr/lib/opkg/info/pihole-web.control";
+$core_current = "unknown";
+$FTL_current = "unknown";
+$web_current = "unknown";
 
-$localversions = "/etc/pihole/localversions";
-$localbranches = "/etc/pihole/localbranches";
-$GitHubVersions = "/etc/pihole/GitHubVersions";
-
-if(!is_readable($localversions) || !is_readable($localbranches) || !is_readable($GitHubVersions))
-{
-	$core_branch = "master";
-	$core_current = "N/A";
-	$core_update = false;
-	$web_branch = "master";
-	$web_current = "N/A";
-	$web_update = false;
-	$FTL_current = "N/A";
-	$FTL_update = false;
-}
-else
+if (file_exists($pihole))
 {
-	$versions = explode(" ", file_get_contents($localversions));
-	$branches = explode(" ", file_get_contents($localbranches));
-	$GitHubversions = explode(" ", file_get_contents($GitHubVersions));
-
-	/********** Get Pi-hole core branch / version / commit **********/
-	// Check if on a dev branch
-	$core_branch = $branches[0];
-	if($core_branch !== "master") {
-	    $core_current = "vDev";
-	    $core_commit = $versions[0];
-	}
-	else {
-	    $core_current = explode("-",$versions[0])[0];
-	}
-
-	/********** Get Pi-hole web branch / version / commit **********/
-	$web_branch = $branches[1];
-	if($web_branch !== "master") {
-	    $web_current = "vDev";
-	    $web_commit = $versions[1];
-	}
-	else {
-	    $web_current = explode("-",$versions[1])[0];
-	}
-
-	/********** Get Pi-hole FTL (not a git repository) **********/
-	$FTL_branch = $branches[2];
-	if(substr($versions[2], 0, 4) === "vDev") {
-	    $FTL_current = "vDev";
-	    $FTL_commit = $versions[2];
-	}
-	else {
-	    $FTL_current = $versions[2];
-	}
-
-	// Get data from GitHub
-	$core_latest = $GitHubversions[0];
-	$web_latest = $GitHubversions[1];
-	$FTL_latest = $GitHubversions[2];
-
-	// Core version comparison
-	if($core_current !== "vDev")
-	{
-		// This logic allows the local core version to be newer than the upstream version
-		// The update indicator is only shown if the upstream version is NEWER
-		$core_update = (version_compare($core_current, $core_latest) < 0);
-	}
-	else
-	{
-		$core_update = false;
+	foreach(file($pihole) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $core_current) = explode(":", $line);
+	        $core_current = trim($core_current);
+			$core_current = "v".strstr($core_current, '-', true);
+	    }
 	}
+}
 
-	// Web version comparison
-	if($web_current !== "vDev")
-	{
-		// This logic allows the local core version to be newer than the upstream version
-		// The update indicator is only shown if the upstream version is NEWER
-		$web_update = (version_compare($web_current, $web_latest) < 0);
-	}
-	else
-	{
-		$web_update = false;
+if (file_exists($pihole_FTL))
+{
+	foreach(file($pihole_FTL) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $FTL_current) = explode(":", $line);
+	        $FTL_current = trim($FTL_current);
+			$FTL_current = "v".strstr($FTL_current, '-', true);
+	    }
 	}
+}
 
-	// FTL version comparison
-	// This logic allows the local core version to be newer than the upstream version
-	// The update indicator is only shown if the upstream version is NEWER
-	if($FTL_current !== "vDev")
-	{
-		$FTL_update = (version_compare($FTL_current, $FTL_latest) < 0);
-	}
-	else
-	{
-		$FTL_update = false;
+if (file_exists($pihole_web))
+{
+	foreach(file($pihole_web) as $line) {
+	    if(strpos($line, "Version") !== false) {
+	        list(, $web_current) = explode(":", $line);
+	        $web_current = trim($web_current);
+			$web_current = "v".strstr($web_current, '-', true);
+	    }
 	}
-
 }
-
 ?>
--- a/settings.php
+++ b/settings.php
@@ -8,9 +8,6 @@
 require "scripts/pi-hole/php/header.php";
 require "scripts/pi-hole/php/savesettings.php";
 require_once "scripts/pi-hole/php/FTL.php";
-// Reread ini file as things might have been changed
-$setupVars = parse_ini_file("/etc/pihole/setupVars.conf");
-$piholeFTLConf = piholeFTLConfig();
 
 // Handling of PHP internal errors
 $last_error = error_get_last();
@@ -70,14 +67,8 @@ if (isset($_POST["submit"])) {
 <?php } ?>
 
 <?php
-if (isset($setupVars["PIHOLE_INTERFACE"])) {
-    $piHoleInterface = $setupVars["PIHOLE_INTERFACE"];
-} else {
-    $piHoleInterface = "unknown";
-}
-if (isset($setupVars["IPV4_ADDRESS"])) {
-    $piHoleIPv4 = $setupVars["IPV4_ADDRESS"];
-} else {
+$piHoleIPv4 = uci_get("network", $piHoleInterface, "ipaddr");
+if (!isset($piHoleIPv4)) {
     $piHoleIPv4 = "unknown";
 }
 
@@ -85,118 +76,100 @@ if (isset($setupVars["IPV4_ADDRESS"])) {
 $DNSservers = [];
 $DNSactive = [];
 
-$i = 1;
-while (isset($setupVars["PIHOLE_DNS_" . $i])) {
-    if (isinserverlist($setupVars["PIHOLE_DNS_" . $i])) {
-        array_push($DNSactive, $setupVars["PIHOLE_DNS_" . $i]);
-    } elseif (strpos($setupVars["PIHOLE_DNS_" . $i], ".") !== false) {
-        if (!isset($custom1)) {
-            $custom1 = $setupVars["PIHOLE_DNS_" . $i];
-        } else {
-            $custom2 = $setupVars["PIHOLE_DNS_" . $i];
-        }
-    } elseif (strpos($setupVars["PIHOLE_DNS_" . $i], ":") !== false) {
-        if (!isset($custom3)) {
-            $custom3 = $setupVars["PIHOLE_DNS_" . $i];
-        } else {
-            $custom4 = $setupVars["PIHOLE_DNS_" . $i];
-        }
-    }
-    $i++;
+$server = uci_get("dhcp", "@dnsmasq[0]", "server");
+$idxsvr = substr_count(file_get_contents("/etc/config/dhcp"), "list server") - 1;
+if (isset($server) && $idxsvr >= 0)
+{
+    $servers = explode(" ", $server);
+	for($i = 0; $i <= $idxsvr; $i++)
+	{
+    	if (isset($servers[$i])) {
+	    	if (isinserverlist($servers[$i])) {
+	        	array_push($DNSactive, $servers[$i]);
+    		} elseif (strpos($servers[$i], ".") !== false) {
+		        if (!isset($custom1)) {
+		            $custom1 = $servers[$i];
+		        } else {
+		            $custom2 = $servers[$i];
+		        }
+		    } elseif (strpos($servers[$i], ":") !== false) {
+		        if (!isset($custom3)) {
+		            $custom3 = $servers[$i];
+		        } else {
+		            $custom4 = $servers[$i];
+		        }
+		    }
+		}
+	}
 }
 
-if (isset($setupVars["DNS_FQDN_REQUIRED"])) {
-    if ($setupVars["DNS_FQDN_REQUIRED"]) {
-        $DNSrequiresFQDN = true;
-    } else {
-        $DNSrequiresFQDN = false;
-    }
-} else {
+$DNSrequiresFQDN = intval(uci_get("dhcp", "@dnsmasq[0]", "domainneeded"));
+if ($DNSrequiresFQDN !== 1) {
     $DNSrequiresFQDN = false;
+} else {
+    $DNSrequiresFQDN = true;
 }
 
-if (isset($setupVars["DNS_BOGUS_PRIV"])) {
-    if ($setupVars["DNS_BOGUS_PRIV"]) {
-        $DNSbogusPriv = true;
-    } else {
-        $DNSbogusPriv = false;
-    }
+$DNSbogusPriv = intval(uci_get("dhcp", "@dnsmasq[0]", "boguspriv"));
+if ($DNSbogusPriv === 1 || !isset($DNSbogusPriv)) {
+    $DNSbogusPriv = true;
 } else {
     $DNSbogusPriv = false;
 }
 
-if (isset($setupVars["DNSSEC"])) {
-    if ($setupVars["DNSSEC"]) {
-        $DNSSEC = true;
-    } else {
-        $DNSSEC = false;
-    }
+$DNSSEC = intval(uci_get("dhcp", "@dnsmasq[0]", "dnssec"));
+if ($DNSSEC === 1) {
+    $DNSSEC = true;
 } else {
     $DNSSEC = false;
 }
 
-if (isset($setupVars["DNSMASQ_LISTENING"])) {
-    if ($setupVars["DNSMASQ_LISTENING"] === "single") {
-        $DNSinterface = "single";
-    } elseif ($setupVars["DNSMASQ_LISTENING"] === "bind") {
-        $DNSinterface = "bind";
-    } elseif ($setupVars["DNSMASQ_LISTENING"] === "all") {
-        $DNSinterface = "all";
-    } else {
-        $DNSinterface = "local";
-    }
-} else {
-    $DNSinterface = "single";
-}
-if (isset($setupVars["REV_SERVER"]) && ($setupVars["REV_SERVER"] == 1)) {
-    $rev_server = true;
-    $rev_server_cidr   = $setupVars["REV_SERVER_CIDR"];
-    $rev_server_target = $setupVars["REV_SERVER_TARGET"];
-    $rev_server_domain = $setupVars["REV_SERVER_DOMAIN"];
-} else {
-    $rev_server = false;
+$localservice = intval(uci_get("dhcp", "@dnsmasq[0]", "localservice"));
+$iface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "interface"));
+$notinterface = explode(" ", uci_get("dhcp", "@dnsmasq[0]", "notinterface"));
+
+if ($localservice === 1) {
+    $DNSinterface = "local";
+} elseif (in_array("nonexisting", $notinterface)) {
+    $DNSinterface = "all";
+} elseif (in_array($piHoleInterface, $iface)) {
+   $DNSinterface = "single";
 }
 ?>
 
 <?php
 // Query logging
-if (isset($setupVars["QUERY_LOGGING"])) {
-    if ($setupVars["QUERY_LOGGING"] == 1) {
-        $piHoleLogging = true;
-    } else {
-        $piHoleLogging = false;
-    }
-} else {
+$piHoleLogging = intval(uci_get("dhcp", "@dnsmasq[0]", "logqueries"));
+if ($piHoleLogging === 1) {
     $piHoleLogging = true;
+} else {
+    $piHoleLogging = false;
 }
 ?>
 
 <?php
 // Excluded domains in API Query Log call
-if (isset($setupVars["API_EXCLUDE_DOMAINS"])) {
-    $excludedDomains = explode(",", $setupVars["API_EXCLUDE_DOMAINS"]);
-} else {
+$excludedDomains = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_domains"));
+if (!isset($excludedDomains)) {
     $excludedDomains = [];
 }
 
 // Excluded clients in API Query Log call
-if (isset($setupVars["API_EXCLUDE_CLIENTS"])) {
-    $excludedClients = explode(",", $setupVars["API_EXCLUDE_CLIENTS"]);
-} else {
+$excludedClients = explode(" ", uci_get("pihole", "@pihole[0]", "api_exclude_clients"));
+if (!isset($excludedClients)) {
     $excludedClients = [];
 }
 
 // Excluded clients
-if (isset($setupVars["API_QUERY_LOG_SHOW"])) {
-    $queryLog = $setupVars["API_QUERY_LOG_SHOW"];
-} else {
+$queryLog = uci_get("pihole", "@pihole[0]", "api_query_log_show");
+if (!isset($queryLog)) {
     $queryLog = "all";
 }
 
 ?>
 
 <?php
-if (isset($_GET['tab']) && in_array($_GET['tab'], array("sysadmin", "dns", "piholedhcp", "api", "privacy", "teleporter"))) {
+if (isset($_GET['tab']) && in_array($_GET['tab'], array("sysadmin", "dns", "piholedhcp", "api", "privacy"))) {
     $tab = $_GET['tab'];
 } else {
     $tab = "sysadmin";
@@ -221,9 +194,6 @@ if (isset($_GET['tab']) && in_array($_GE
                 <li role="presentation"<?php if($tab === "privacy"){ ?> class="active"<?php } ?>>
                     <a href="#privacy" aria-controls="privacy" aria-expanded="<?php echo $tab === "privacy" ? "true" : "false"; ?>" role="tab" data-toggle="tab">Privacy</a>
                 </li>
-                <li role="presentation"<?php if($tab === "teleporter"){ ?> class="active"<?php } ?>>
-                    <a href="#teleporter" aria-controls="teleporter" aria-expanded="<?php echo $tab === "teleporter" ? "true" : "false"; ?>" role="tab" data-toggle="tab">Teleporter</a>
-                </li>
             </ul>
             <div class="tab-content">
                 <!-- ######################################################### System admin ######################################################### -->
@@ -242,16 +212,18 @@ if (isset($_GET['tab']) && in_array($_GE
                                                 function get_FTL_data($arg)
                                                 {
                                                     global $FTLpid;
-                                                    return trim(exec("ps -p " . $FTLpid . " -o " . $arg));
+                                                    if (file_exists('/usr/libexec/ps-procps-ng')) {
+                                                        return trim(exec("/usr/libexec/ps-procps-ng -p " . $FTLpid . " -o " . $arg));
+                                                    } else {
+                                                        return trim(exec("/bin/echo \"ps-procps-ng not installed\""));
+                                                    }
                                                 }
-
-                                                $FTLversion = exec("/usr/bin/pihole-FTL version");
                                             ?>
                                             <table class="table table-striped table-bordered nowrap">
                                                 <tbody>
                                                     <tr>
                                                         <th scope="row">FTL version:</th>
-                                                        <td><?php echo $FTLversion; ?></td>
+                                                        <td><?php echo $FTL_current; ?></td>
                                                     </tr>
                                                     <tr>
                                                         <th scope="row">Process identifier (PID):</th>
@@ -314,7 +286,7 @@ if (isset($_GET['tab']) && in_array($_GE
                             <div class="box box-warning">
                                 <div class="box-body">
                                     <div class="row">
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                             <?php if ($piHoleLogging) { ?>
                                                 <button type="button" class="btn btn-warning confirm-disablelogging-noflush btn-block">Disable query logging</button>
                                             <?php } else { ?>
@@ -327,26 +299,18 @@ if (isset($_GET['tab']) && in_array($_GE
                                             <?php } ?>
                                         </div>
                                         <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                                 <button type="button" class="btn btn-warning confirm-flusharp btn-block">Flush network table</button>
                                         </div>
-                                        <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-warning confirm-restartdns btn-block">Restart DNS resolver</button>
-                                        </div>
                                     </div>
                                     <br/>
                                     <div class="row">
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-danger confirm-flushlogs btn-block">Flush logs (last 24 hours)</button>
-                                        </div>
                                         <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-danger confirm-poweroff btn-block">Power off system</button>
+                                        <div class="col-md-6">
+                                            <button type="button" class="btn btn-danger confirm-flushlogs btn-block">Flush logs (last 24 hours)</button>
                                         </div>
-                                        <p class="hidden-md hidden-lg"></p>
-                                        <div class="col-md-4">
-                                            <button type="button" class="btn btn-danger confirm-reboot btn-block">Restart system</button>
+                                        <div class="col-md-6">
+                                            <button type="button" class="btn btn-warning confirm-restartdns btn-block">Restart DNS resolver</button>
                                         </div>
                                     </div>
 
@@ -363,14 +327,6 @@ if (isset($_GET['tab']) && in_array($_GE
                                         <input type="hidden" name="action" value="Disable-noflush">
                                         <input type="hidden" name="token" value="<?php echo $token ?>">
                                     </form>
-                                    <form role="form" method="post" id="poweroffform">
-                                        <input type="hidden" name="field" value="poweroff">
-                                        <input type="hidden" name="token" value="<?php echo $token ?>">
-                                    </form>
-                                    <form role="form" method="post" id="rebootform">
-                                        <input type="hidden" name="field" value="reboot">
-                                        <input type="hidden" name="token" value="<?php echo $token ?>">
-                                    </form>
                                     <form role="form" method="post" id="restartdnsform">
                                         <input type="hidden" name="field" value="restartdns">
                                         <input type="hidden" name="token" value="<?php echo $token ?>">
@@ -383,33 +339,45 @@ if (isset($_GET['tab']) && in_array($_GE
                 <!-- ######################################################### DHCP ######################################################### -->
                 <div id="piholedhcp" class="tab-pane fade<?php if($tab === "piholedhcp"){ ?> in active<?php } ?>">
                     <?php
-                    // Pi-hole DHCP server
-                    if (isset($setupVars["DHCP_ACTIVE"])) {
-                        if ($setupVars["DHCP_ACTIVE"] == 1) {
-                            $DHCP = true;
-                        } else {
-                            $DHCP = false;
+
+                    $proto = uci_get("network", $piHoleInterface, "proto");
+                    $dhcpv6_status = uci_get("dhcp", $piHoleInterface, "dhcpv6");
+                    $dhcpv4_status = uci_get("dhcp", $piHoleInterface, "dhcpv4");
+                    $ra_management = uci_get("dhcp", $piHoleInterface, "ra_management");
+                    $dhcpodhcpd = uci_get("dhcp", "odhcpd", "maindhcp");
+                    $ra_flags = explode(" ", uci_get("dhcp", $piHoleInterface, "ra_flags"));
+                    $DHCP = false;
+                    $DHCPip = 'unknown';
+                    if ($proto === "static" && $piHoleIPv4 !== "unknown" && $dhcpv4_status !== "disabled" && $dhcpodhcpd !== "1") {
+                        $DHCP = true;
+                        $odhcpd = false;
+                        $DHCPv6 = false;
+                        if (($ra_management === '2') || ($dhcpv6_status === 'server' && in_array("managed-config", $ra_flags))) {
+                            if (file_exists('/usr/sbin/odhcpd')) {
+                                $odhcpd = true;
+                            }
+                            $DHCPv6 = true;
                         }
-                        // Read settings from config file
-                        if (isset($setupVars["DHCP_START"])) {
-                            $DHCPstart = $setupVars["DHCP_START"];
-                        } else {
+
+                        $DHCPdomain = explode(".", $piHoleIPv4);
+                        $DHCPip = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".";
+
+                        $DHCPstart = uci_get("dhcp", $piHoleInterface, "start");
+                        if (!isset($DHCPstart)) {
                             $DHCPstart = "";
                         }
-                        if (isset($setupVars["DHCP_END"])) {
-                            $DHCPend = $setupVars["DHCP_END"];
-                        } else {
-                            $DHCPend = "";
+                        $limit = uci_get("dhcp", $piHoleInterface, "limit");
+                        if (isset($limit)) {
+                            $DHCPend = $DHCPstart + $limit;
                         }
-                        if (isset($setupVars["DHCP_ROUTER"])) {
-                            $DHCProuter = $setupVars["DHCP_ROUTER"];
-                        } else {
+                        $DHCProuter = $piHoleIPv4;
+                        if (!isset($DHCProuter)) {
                             $DHCProuter = "";
                         }
 
-                        // This setting has been added later, we have to check if it exists
-                        if (isset($setupVars["DHCP_LEASETIME"])) {
-                            $DHCPleasetime = $setupVars["DHCP_LEASETIME"];
+                        $DHCPleasetime = uci_get("dhcp", $piHoleInterface, "leasetime");
+                        $DHCPleasetime = preg_replace("/[^0-9]/", "",$DHCPleasetime);
+                        if (isset($DHCPleasetime)) {
                             if (strlen($DHCPleasetime) < 1) {
                                 // Fallback if empty string
                                 $DHCPleasetime = 24;
@@ -417,42 +385,38 @@ if (isset($_GET['tab']) && in_array($_GE
                         } else {
                             $DHCPleasetime = 24;
                         }
-                        if (isset($setupVars["DHCP_IPv6"])) {
-                            $DHCPIPv6 = $setupVars["DHCP_IPv6"];
+                        $DHCP_rapid_commit = uci_get("dhcp", "@dnsmasq[0]", "rapidcommit");
+                        if ($DHCP_rapid_commit != 1) {
+                            $DHCP_rapid_commit = false;
                         } else {
-                            $DHCPIPv6 = false;
+                            $DHCP_rapid_commit = true;
                         }
-                        if (isset($setupVars["DHCP_rapid_commit"])) {
-                            $DHCP_rapid_commit = $setupVars["DHCP_rapid_commit"];
+                        $leasefile = uci_get("dhcp", "@dnsmasq[0]", "leasefile");;
+                        if (!isset($leasefile)) {
+                            $leasefile = "";
+                        }
+                        $DHCP_sequential = uci_get("dhcp", "@dnsmasq[0]", "sequential_ip");
+                        if ($DHCP_sequential != 1) {
+                            $DHCP_sequential = false;
                         } else {
-                            $DHCP_rapid_commit = false;
+                            $DHCP_sequential = true;
                         }
 
-                    } else {
-                        $DHCP = false;
-                        // Try to guess initial settings
-                        if ($piHoleIPv4 !== "unknown") {
-                            $DHCPdomain = explode(".", $piHoleIPv4);
-                            $DHCPstart = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".201";
-                            $DHCPend = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".251";
-                            $DHCProuter = $DHCPdomain[0] . "." . $DHCPdomain[1] . "." . $DHCPdomain[2] . ".1";
-                        } else {
-                            $DHCPstart = "";
-                            $DHCPend = "";
-                            $DHCProuter = "";
+                        $piHoleDomain = uci_get("dhcp", $piHoleInterface, "domain_iface");
+                        if (!isset($piHoleDomain)) {
+                            $piHoleDomain = uci_get("dhcp", "@dnsmasq[0]", "domain");
                         }
-                        $DHCPleasetime = 24;
-                        $DHCPIPv6 = false;
-                        $DHCP_rapid_commit = false;
-                    }
-                    if (isset($setupVars["PIHOLE_DOMAIN"])) {
-                        $piHoleDomain = $setupVars["PIHOLE_DOMAIN"];
-                    } else {
-                        $piHoleDomain = "lan";
                     }
                     ?>
                     <form role="form" method="post">
                         <div class="row">
+                            <?php if (!$DHCP) { ?>
+                            <div class="col-md-12">
+                                <div class="box box-danger">
+                                        <h4 style="text-align: center;color: red;"><p>DHCP is Disabled</p></h4>
+                                </div>
+                            </div>
+                            <?php } ?>
                             <!-- DHCP Settings Box -->
                             <div class="col-md-6">
                                 <div class="box box-warning">
@@ -462,8 +426,15 @@ if (isset($_GET['tab']) && in_array($_GE
                                     <div class="box-body">
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <div><input type="checkbox" name="active" id="DHCPchk" <?php if ($DHCP){ ?>checked<?php } ?>><label for="DHCPchk"><strong>DHCP server enabled</strong></label></div><br>
-                                                <p id="dhcpnotice" lookatme-text="Make sure your router's DHCP server is disabled when using the Pi-hole DHCP server!" <?php if (!$DHCP){ ?>hidden<?php } ?>>Make sure your router's DHCP server is disabled when using the Pi-hole DHCP server!</p>
+                                                <label>Router (gateway) IP address</label>
+                                                <div class="form-group">
+                                                    <div class="input-group">
+                                                        <div class="input-group-addon">Router</div>
+                                                        <div data-placement="auto" title="Configure this value from Luci Web or Uci cli" data-toggle="tooltip">
+                                                            <input type="text" class="form-control DHCPgroup" name="router" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" value="<?php echo $DHCProuter; ?>" disabled>
+                                                        </div>
+                                                    </div>
+                                                </div>
                                             </div>
                                         </div>
                                         <div class="row">
@@ -474,9 +445,9 @@ if (isset($_GET['tab']) && in_array($_GE
                                                 <div class="form-group">
                                                     <div class="input-group">
                                                         <div class="input-group-addon">From</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="from" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCPstart; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon"><?php echo $DHCPip; ?></div>
+                                                        <input required id="dhcpstart" type="number" min="<?php echo $DHCPdomain[3]; ?>" max="253" class="form-control DHCPgroup" name="from" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
+                                                               value="<?php echo $DHCPstart; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
@@ -484,24 +455,26 @@ if (isset($_GET['tab']) && in_array($_GE
                                                 <div class="form-group">
                                                     <div class="input-group">
                                                         <div class="input-group-addon">To</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="to" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCPend; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon"><?php echo $DHCPip; ?></div>
+                                                        <input required id="dhcpend" type="number" max="254" class="form-control DHCPgroup" name="to" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
+                                                               value="<?php echo $DHCPend; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <label>Router (gateway) IP address</label>
+                                                <label>DHCP lease time</label>
                                                 <div class="form-group">
                                                     <div class="input-group">
-                                                        <div class="input-group-addon">Router</div>
-                                                        <input type="text" class="form-control DHCPgroup" name="router" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                               value="<?php echo $DHCProuter; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon">Lease time in hours</div>
+                                                        <input type="number" class="form-control DHCPgroup"
+                                                               name="leasetime"
+                                                               id="leasetime" value="<?php echo $DHCPleasetime; ?>"
+                                                               data-mask <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
+                                                <p>*Hint: 24 = one day, 168 = one week, 744 = one month, 8760 = one year</p>
                                             </div>
                                         </div>
                                     </div>
@@ -521,31 +494,27 @@ if (isset($_GET['tab']) && in_array($_GE
                                                     <div class="input-group">
                                                         <div class="input-group-addon">Domain</div>
                                                         <input type="text" class="form-control DHCPgroup" name="domain"
-                                                               value="<?php echo $piHoleDomain; ?>"
-                                                               <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                               value="<?php echo $piHoleDomain; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
-                                                <label>DHCP lease time</label>
+                                                <label>Leasefile Location</label>
                                                 <div class="form-group">
                                                     <div class="input-group">
-                                                        <div class="input-group-addon">Lease time in hours</div>
-                                                        <input type="number" class="form-control DHCPgroup"
-                                                               name="leasetime"
-                                                               id="leasetime" value="<?php echo $DHCPleasetime; ?>"
-                                                               data-mask <?php if (!$DHCP){ ?>disabled<?php } ?>>
+                                                        <div class="input-group-addon">Leasefile</div>
+                                                        <input type="text" class="form-control DHCPgroup" name="leasefile"
+                                                               value="<?php echo $leasefile; ?>" <?php if (!$DHCP){ ?>disabled<?php } ?>>
                                                     </div>
                                                 </div>
-                                                <p>Hint: 0 = infinite, 24 = one day, 168 = one week, 744 = one month, 8760 = one year</p>
                                             </div>
                                         </div>
                                         <div class="row">
                                             <div class="col-md-12">
-                                              <div><input type="checkbox" name="DHCP_rapid_commit" id="DHCP_rapid_commit" class="DHCPgroup" <?php if ($DHCP_rapid_commit){ ?>checked<?php }; if (!$DHCP){ ?> disabled<?php } ?>>&nbsp;<label for="DHCP_rapid_commit"><strong>Enable DHCPv4 rapid commit (fast address assignment)</strong></label></div>
-                                              <div><input type="checkbox" name="useIPv6" id="useIPv6" class="DHCPgroup" <?php if ($DHCPIPv6){ ?>checked<?php }; if (!$DHCP){ ?> disabled<?php } ?>>&nbsp;<label for="useIPv6"><strong>Enable IPv6 support (SLAAC + RA)</strong></label></div>
+                                              <div><input type="checkbox" name="DHCP_rapid_commit" id="DHCP_rapid_commit" class="DHCPgroup" <?php if ($DHCP_rapid_commit){ ?>checked<?php }?> <?php if (!$DHCP){ ?>disabled<?php } ?>>&nbsp;<label for="DHCP_rapid_commit"><strong>Enable DHCPv4 rapid commit</strong> <i>(fast address assignment)</i></label></div>
+                                              <div><input type="checkbox" name="DHCP_sequential" id="DHCP_sequential" class="DHCPgroup" <?php if ($DHCP_sequential){ ?>checked<?php }?> <?php if (!$DHCP){ ?>disabled<?php } ?>>&nbsp;<label for="DHCP_sequential"><strong>Allocate IP Sequentially</strong> <i>(starting from the lowest available address)</i></label></div>
                                             </div>
                                         </div>
                                     </div>
@@ -556,14 +525,11 @@ if (isset($_GET['tab']) && in_array($_GE
                         <!-- DHCP Leases Box -->
                         <div class="row">
                             <?php
+                            $use_ubus = true;
                             $dhcp_leases = array();
-                            if ($DHCP) {
-                                // Read leases file
-                                $leasesfile = true;
-                                $dhcpleases = @fopen('/etc/pihole/dhcp.leases', 'r');
-                                if (!is_resource($dhcpleases))
-                                    $leasesfile = false;
+                            $dhcp6_leases = array();
 
+                            if ($DHCP) {
                                 function convertseconds($argument)
                                 {
                                     $seconds = round($argument);
@@ -577,38 +543,166 @@ if (isset($_GET['tab']) && in_array($_GE
                                         return sprintf('%dd %dh %dm %ds', ($seconds / 86400), ($seconds / 3600 % 24), ($seconds / 60 % 60), ($seconds % 60));
                                     }
                                 }
-
-                                while (!feof($dhcpleases) && $leasesfile) {
-                                    $line = explode(" ", trim(fgets($dhcpleases)));
-                                    if (count($line) == 5) {
-                                        $counter = intval($line[0]);
-                                        if ($counter == 0) {
-                                            $time = "Infinite";
-                                        } elseif ($counter <= 315360000) // 10 years in seconds
-                                        {
-                                            $time = convertseconds($counter);
-                                        } else // Assume time stamp
-                                        {
-                                            $time = convertseconds($counter - time());
-                                        }
-
-                                        if (strpos($line[2], ':') !== false) {
-                                            // IPv6 address
-                                            $type = 6;
-                                        } else {
-                                            // IPv4 lease
-                                            $type = 4;
-                                        }
-
-                                        $host = htmlentities($line[3]);
-
-                                        $clid = $line[4];
-                                        if ($clid == "*") {
-                                            $clid = "<i>unknown</i>";
-                                        }
-
-                                        array_push($dhcp_leases, ["TIME" => $time, "hwaddr" => strtoupper($line[1]), "IP" => $line[2], "host" => $host, "clid" => $clid, "type" => $type]);
-                                    }
+                                if ($use_ubus) {
+	                            	$ubus_leases = shell_exec((posix_getuid() !== 0 ? "sudo " : null) . "ubus call luci-rpc getDHCPLeases 2>&1");
+	                            	$ubus_leases = json_decode($ubus_leases, TRUE);
+
+	                            	foreach($ubus_leases['dhcp_leases'] as $ubus_lease) {
+	                                    $counter = $ubus_lease['expires'];
+	                                    if (!$counter || intval($counter) > 5000000) {
+	                                        $time = "Infinite";
+	                                    }
+	                                    elseif (intval($counter) == 0) {
+	                                            $time = "Expired";
+	                                    } elseif (intval($counter) <= 315360000) // 10 years in seconds
+	                                    {
+	                                        $time = convertseconds(intval($counter));
+	                                    } else // Assume time stamp
+	                                    {
+	                                        $time = convertseconds(intval($counter) - time());
+	                                    }
+
+	                                    $host = $ubus_lease['hostname'];
+	                                    if (!isset($ubus_lease['hostname'])) {
+	                                        $host = "??";
+	                                    }
+
+	                                    $clid = $ubus_lease['duid'];
+	                                    if (!isset($ubus_lease['duid'])) {
+	                                        $clid = "<i>unknown</i>" ;
+	                                    } elseif (strpos($clid, ':') !== true) {
+	                                        $clid = wordwrap($clid, 2, ':', true);
+	                                    }
+
+	                                    array_push($dhcp_leases, ["TIME" => $time, "hwaddr" => strtoupper($ubus_lease['macaddr']), "IP" => $ubus_lease['ipaddr'], "host" => $host, "clid" => $clid]);
+	                                }
+
+	                            	foreach($ubus_leases['dhcp6_leases'] as $ubus_lease6) {
+	                                    $counter = $ubus_lease6['expires'];
+	                                    if (!$counter || intval($counter) > 5000000) {
+	                                        $time = "Infinite";
+	                                    }
+	                                    elseif (intval($counter) == 0) {
+	                                        $time = "Expired";
+	                                    } elseif (intval($counter) <= 315360000) // 10 years in seconds
+	                                    {
+	                                        $time = convertseconds(intval($counter));
+	                                    } else // Assume time stamp
+	                                    {
+	                                        $time = convertseconds(intval($counter) - time());
+	                                    }
+
+	                                    $host = $ubus_lease6['hostname'];
+	                                    if (!isset($ubus_lease6['hostname'])) {
+	                                        $host = "??";
+	                                    }
+
+	                                    $clid = wordwrap($ubus_lease6['duid'], 2, ':', true);
+	                                    if (!isset($ubus_lease6['duid'])) {
+	                                        $clid = "<i>unknown</i>" ;
+	                                    }
+
+	                                    array_push($dhcp6_leases, ["TIME" => $time, "hwaddr" => strtoupper($ubus_lease6['macaddr']), "IP" => $ubus_lease6['ip6addr'], "host" => $host, "clid" => $clid]);
+	                                }
+                                } else {
+	                                // Read leases file
+	                                $leasesfile = true;
+	                                if (file_exists($leasefile)) {
+	                                   $dhcpleases = @fopen($leasefile, 'r');
+	                                }
+
+	                                if (!is_resource($dhcpleases))
+	                                    $leasesfile = false;
+
+	                                while (!feof($dhcpleases) && $leasesfile) {
+	                                    $line = explode(" ", trim(fgets($dhcpleases)));
+	                                    if (count($line) == 5) {
+	                                        $counter = intval($line[0]);
+	                                        if ($counter == 0) {
+	                                            $time = "Infinite";
+	                                        } elseif ($counter <= 315360000) // 10 years in seconds
+	                                        {
+	                                            $time = convertseconds($counter);
+	                                        } else // Assume time stamp
+	                                        {
+	                                            $time = convertseconds($counter - time());
+	                                        }
+
+	                                        $macaddr = $line[1];
+	                                        if (is_numeric($macaddr)) {
+	                                            $macaddr = substr($line[4], -17);
+	                                        }
+
+	                                        if (strpos($line[2], ':') !== false) {
+	                                            // IPv6 address
+	                                            $type = 6;
+	                                        } else {
+	                                            // IPv4 lease
+	                                            $type = 4;
+	                                        }
+
+	                                        $host = htmlentities($line[3]);
+	                                        if ($host == "*") {
+	                                            $host = "UNKNOWN";
+	                                        }
+
+	                                        $clid = $line[4];
+	                                        if ($clid == "*") {
+	                                            $clid = "01:" . $line[1];
+	                                        }
+
+	                                        if ($type == 4) {
+	                                            array_push($dhcp_leases, ["TIME" => $time, "hwaddr" => strtoupper($macaddr), "IP" => $line[2], "host" => $host, "clid" => $clid, "type" => $type]);
+	                                        } elseif (!$odhcpd && $type == 6) {
+	                                            array_push($dhcp6_leases, ["TIME" => $time, "hwaddr" => strtoupper($macaddr), "IP" => $line[2], "host" => $host, "clid" => $clid, "type" => $type]);
+	                                        }
+	                                    }
+	                                }
+	                                if ($odhcpd) {
+	                                    $odhcpd_leasefile = uci_get("dhcp", "@odhcpd[0]", "leasefile");
+		                                if (file_exists($odhcpd_leasefile)) {
+		                                   $odhcpdleases = @fopen($odhcpd_leasefile, 'r');
+		                                }
+
+	                                    if (!is_resource($odhcpdleases)) {
+	                                        $leasesfile = false;
+	                                    }
+
+		                                while (!feof($odhcpdleases) && $leasesfile) {
+		                                    $line = explode(" ", trim(fgets($odhcpdleases)));
+		                                    if (count($line) == 9) {
+		                                        $counter = intval($line[5]);
+		                                        if ($counter == 0) {
+		                                            $time = "Infinite";
+		                                        } elseif ($counter <= 315360000) // 10 years in seconds
+		                                        {
+		                                            $time = convertseconds($counter);
+		                                        } else // Assume time stamp
+		                                        {
+		                                            $time = convertseconds($counter - time());
+		                                        }
+
+		                                        $macaddr = substr($line[2], -12);
+	                                            if (strpos($macaddr, ':') !== true) {
+	                                                $macaddr = wordwrap($macaddr, 2, ':', true);
+		                                        }
+
+		                                        $type = 6;
+
+		                                        $host = htmlentities($line[4]);
+		                                        if ($host == "-" || $host == "*") {
+		                                            $host = "??";
+		                                        }
+
+		                                        $clid = $line[2];
+	                                            if (strpos($clid, ':') !== true) {
+	                                                $clid = wordwrap($clid, 2, ':', true);
+		                                        }
+
+		                                        array_push($dhcp6_leases, ["TIME" => $time, "hwaddr" => strtoupper($macaddr), "IP" => $line[8], "host" => $host, "clid" => $clid, "type" => $type]);
+		                                    }
+		                                }
+	                                }
                                 }
                             }
 
@@ -628,24 +722,68 @@ if (isset($_GET['tab']) && in_array($_GE
                                                             <th>MAC address</th>
                                                             <th>IP address</th>
                                                             <th>Hostname</th>
+                                                            <td>Lease time remaining</td>
                                                             <td></td>
                                                         </tr>
                                                     </thead>
                                                     <tbody>
                                                         <?php foreach ($dhcp_leases as $lease) { ?>
                                                         <tr data-placement="auto" data-container="body" data-toggle="tooltip"
-                                                            title="Lease type: IPv<?php echo $lease["type"]; ?><br/>Remaining lease time: <?php echo $lease["TIME"]; ?><br/>DHCP UID: <?php echo $lease["clid"]; ?>">
+                                                            title="Lease type: IPv4<br/>DHCP UID: <?php echo $lease["clid"]; ?>">
                                                             <td id="MAC"><?php echo $lease["hwaddr"]; ?></td>
                                                             <td id="IP" data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
                                                             <td id="HOST"><?php echo $lease["host"]; ?></td>
+                                                            <td id="HOST"><?php echo $lease["TIME"]; ?></td>
                                                             <td>
                                                                 <button type="button" class="btn btn-danger btn-xs" id="removedynamic">
                                                                     <span class="fas fas fa-trash-alt"></span>
                                                                 </button>
-                                                                <button type="button" id="button" class="btn btn-warning btn-xs" data-static="alert">
-                                                                    <span class="fas fas fa-file-import"></span>
+                                                            </td>
+                                                        </tr>
+                                                        <?php } ?>
+                                                    </tbody>
+                                                </table>
+                                            </div>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+                            <?php if ($DHCPv6) { ?>
+                            <div class="col-md-12">
+                                <div class="box box-warning">
+                                    <div class="box-header with-border">
+                                        <h3 class="box-title">Currently active DHCPv6 leases<?php if ($odhcpd){ echo " <i>(odhcpd)</i>"; } ?></h3>
+                                    </div>
+                                    <div class="box-body">
+                                        <div class="row">
+                                            <div class="col-md-12">
+                                                <table id="DHCP6LeasesTable" class="table table-striped table-bordered nowrap" width="100%">
+                                                    <thead>
+                                                        <tr>
+                                                            <th>MAC address</th>
+                                                            <th>IP address</th>
+                                                            <th>Hostname</th>
+                                                            <td>Lease time remaining</td>
+                                                            <?php if (!$odhcpd){ ?>
+                                                            <td></td>
+                                                            <?php } ?>
+                                                        </tr>
+                                                    </thead>
+                                                    <tbody>
+                                                        <?php foreach ($dhcp6_leases as $lease) { ?>
+                                                        <tr data-placement="auto" data-container="body" data-toggle="tooltip"
+                                                            title="Lease type: IPv6<br/>DHCP UID: <?php echo $lease["clid"]; ?>">
+                                                            <td id="MAC"><?php echo $lease["hwaddr"]; ?></td>
+                                                            <td id="IP" data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
+                                                            <td id="HOST"><?php echo $lease["host"]; ?></td>
+                                                            <td id="TIME"><?php echo $lease["TIME"]; ?></td>
+                                                            <?php if (!$odhcpd){ ?>
+                                                            <td>
+                                                                <button type="button" class="btn btn-danger btn-xs" id="removedynamic">
+                                                                    <span class="fas fas fa-trash-alt"></span>
                                                                 </button>
                                                             </td>
+                                                            <?php } ?>
                                                         </tr>
                                                         <?php } ?>
                                                     </tbody>
@@ -655,6 +793,7 @@ if (isset($_GET['tab']) && in_array($_GE
                                     </div>
                                 </div>
                             </div>
+                            <?php } ?>
                             <div class="col-md-12">
                                 <div class="box box-warning">
                                     <div class="box-header with-border">
@@ -669,6 +808,8 @@ if (isset($_GET['tab']) && in_array($_GE
                                                         <th>MAC address</th>
                                                         <th>IP address</th>
                                                         <th>Hostname</th>
+                                                        <th>DUID</th>
+                                                        <th>IPv6-Suffix (hex)</th>
                                                         <td></td>
                                                     </tr>
                                                     </thead>
@@ -678,6 +819,8 @@ if (isset($_GET['tab']) && in_array($_GE
                                                             <td><?php echo $lease["hwaddr"]; ?></td>
                                                             <td data-order="<?php echo bin2hex(inet_pton($lease["IP"])); ?>"><?php echo $lease["IP"]; ?></td>
                                                             <td><?php echo htmlentities($lease["host"]); ?></td>
+                                                            <td><?php echo "<i>" . $lease["duid"] . "</i>"; ?></td>
+                                                            <td><?php echo htmlentities($lease["hostid"]); ?></td>
                                                             <td><?php if (strlen($lease["hwaddr"]) > 0) { ?>
                                                                 <button type="submit" class="btn btn-danger btn-xs" name="removestatic"
                                                                         value="<?php echo $lease["hwaddr"]; ?>">
@@ -690,9 +833,11 @@ if (isset($_GET['tab']) && in_array($_GE
                                                     </tbody>
                                                     <tfoot style="display: table-row-group">
                                                         <tr>
-                                                            <td><input type="text" class="form-group" name="AddMAC" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
-                                                            <td><input type="text" class="form-group" name="AddIP" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
-                                                            <td><input type="text" class="form-group" name="AddHostname" value="" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"></td>
+                                                            <td><input type="text" class="form-group" name="AddMAC" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="MAC Address"></td>
+                                                            <td><input type="text" class="form-group" name="AddIP" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="IP Address"></td>
+                                                            <td><input type="text" class="form-group" name="AddHostname" value="" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="Hostname"></td>
+                                                            <td><input type="text" class="form-group" name="AddDUID" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="DUID"></td>
+                                                            <td><input type="text" class="form-group" name="AddHostID" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off" placeholder="IPv6-Suffix (HEX)"></td>
                                                             <td>
                                                                 <button type="submit" class="btn btn-success btn-xs" name="addstatic">
                                                                     <span class="fas fa-plus"></span>
@@ -710,9 +855,11 @@ if (isset($_GET['tab']) && in_array($_GE
                                         </div>
                                     </div>
                                 </div>
+                                <?php if ($DHCP){ ?><input type="hidden" name="active" value=""><?php } ?>
                                 <input type="hidden" name="field" value="DHCP">
                                 <input type="hidden" name="token" value="<?php echo $token ?>">
                                 <button type="submit" class="btn btn-primary pull-right">Save</button>
+								<button type="submit" class="btn btn-primary pull-right" name="restartFTL" style="margin-right: 5px;">Save & Apply</button>
                             </div>
                         </div>
                     </form>
@@ -864,12 +1011,7 @@ if (isset($_GET['tab']) && in_array($_GE
                                                         <div>
                                                             <input type="radio" name="DNSinterface" id="DNSinterface2" value="single"
                                                                     <?php if ($DNSinterface == "single"){ ?>checked<?php } ?>>
-                                                            <label for="DNSinterface2"><strong>Respond only on interface <?php echo htmlentities($piHoleInterface); ?></strong></label>
-                                                        </div>
-                                                        <div>
-                                                            <input type="radio" name="DNSinterface" id="DNSinterface3" value="bind"
-                                                                    <?php if ($DNSinterface == "bind"){ ?>checked<?php } ?>>
-                                                            <label for="DNSinterface3"><strong>Bind only to interface <?php echo htmlentities($piHoleInterface); ?></strong></label>
+                                                            <label for="DNSinterface2"><strong>Respond only on interface <?php echo htmlentities($piHoleInterface); if(isset($piHoleIfname)){ echo " (".htmlentities($piHoleIfname).")"; } ?></strong></label>
                                                         </div>
                                                         <div>
                                                             <input type="radio" name="DNSinterface" id="DNSinterface4" value="all"
@@ -920,7 +1062,6 @@ if (isset($_GET['tab']) && in_array($_GE
                                                     but may also prevent you from being able to access
                                                     local hostnames if the Pi-hole is not used as DHCP server.</p>
                                                 </div>
-                                                <br>
                                                 <div>
                                                     <input type="checkbox" name="DNSSEC" id="DNSSEC" <?php if ($DNSSEC){ ?>checked<?php } ?>>
                                                     <label for="DNSSEC"><strong>Use DNSSEC</strong></label>
@@ -933,65 +1074,6 @@ if (isset($_GET['tab']) && in_array($_GE
                                                     when enabling DNSSEC. A DNSSEC resolver test can be found
                                                     <a href="https://dnssec.vs.uni-due.de/" rel="noopener" target="_blank">here</a>.</p>
                                                 </div>
-                                                <br>
-                                                <h4>Conditional forwarding</h4>
-                                                <p>If not configured as your DHCP server, Pi-hole typically won't be able to
-                                                   determine the names of devices on your local network.  As a
-                                                   result, tables such as Top Clients will only show IP addresses.</p>
-                                                <p>One solution for this is to configure Pi-hole to forward these
-	                                               requests to your DHCP server (most likely your router), but only for devices on your
-	                                               home network.  To configure this we will need to know the IP
-	                                               address of your DHCP server and which addresses belong to your local network.
-                                                   Exemplary input is given below as placeholder in the text boxes (if empty).</p>
-                                                <p>If your local network spans 192.168.0.1 - 192.168.0.255, then you will have to input
-                                                   <code>192.168.0.0/24</code>. If your local network is 192.168.47.1 - 192.168.47.255, it will
-                                                   be <code>192.168.47.0/24</code> and similar. If your network is larger, the CIDR has to be
-                                                   different, for instance a range of 10.8.0.1 - 10.8.255.255 results in <code>10.8.0.0/16</code>,
-                                                   whereas an even wider network of 10.0.0.1 - 10.255.255.255 results in <code>10.0.0.0/8</code>.
-                                                   Setting up IPv6 ranges is exactly similar to setting up IPv4 here and fully supported.
-                                                   Feel free to reach out to us on our
-                                                   <a href="https://discourse.pi-hole.net" rel="noopener" target="_blank">Discourse forum</a>
-                                                   in case you need any assistance setting up local host name resolution for your particular system.</p>
-                                                <p>You can also specify a local domain name (like <code>fritz.box</code>) to ensure queries to
-                                                   devices ending in your local domain name will not leave your network, however, this is optional.
-                                                   The local domain name must match the domain name specified
-                                                   in your DHCP server for this to work. You can likely find it within the DHCP settings.</p>
-                                                <p>Enabling Conditional Forwarding will also forward all hostnames (i.e., non-FQDNs) to the router
-                                                   when "Never forward non-FQDNs" is <em>not</em> enabled.</p>
-                                                <div class="form-group">
-                                                    <div>
-                                                        <input type="checkbox" name="rev_server" id="rev_server" value="rev_server" <?php if(isset($rev_server) && ($rev_server == true)){ ?>checked<?php } ?>>
-                                                        <label for="rev_server"><strong>Use Conditional Forwarding</strong></label>
-                                                    </div>
-                                                    <div class="input-group">
-                                                      <table class="table table-bordered">
-                                                        <thead>
-                                                          <tr>
-                                                            <th>Local network in <a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing" target="_blank">CIDR notation</a></th>
-                                                            <th>IP address of your DHCP server (router)</th>
-                                                            <th>Local domain name (optional)</th>
-                                                          </tr>
-                                                        </thead>
-                                                        <tr>
-                                                          <td>
-                                                            <input type="text" name="rev_server_cidr" placeholder="192.168.0.0/16" class="form-control" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                            <?php if(isset($rev_server_cidr)){ ?>value="<?php echo $rev_server_cidr; ?>"<?php } ?>
-                                                            <?php if(!isset($rev_server) || !$rev_server){ ?>disabled<?php } ?>>
-                                                          </td>
-                                                          <td>
-                                                            <input type="text" name="rev_server_target" placeholder="192.168.0.1" class="form-control" autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                            <?php if(isset($rev_server_target)){ ?>value="<?php echo $rev_server_target; ?>"<?php } ?>
-                                                            <?php if(!isset($rev_server) || !$rev_server){ ?>disabled<?php } ?>>
-                                                          </td>
-                                                          <td>
-                                                            <input type="text" name="rev_server_domain" placeholder="local" class="form-control" data-mask autocomplete="off" spellcheck="false" autocapitalize="none" autocorrect="off"
-                                                            <?php if(isset($rev_server_domain)){ ?>value="<?php echo $rev_server_domain; ?>"<?php } ?>
-                                                            <?php if(!isset($rev_server) || !$rev_server){ ?>disabled<?php } ?>>
-                                                          </td>
-                                                        </tr>
-                                                      </table>
-                                                    </div>
-                                                </div>
                                             </div>
                                         </div>
                                     </div>
@@ -999,6 +1081,7 @@ if (isset($_GET['tab']) && in_array($_GE
                                 <input type="hidden" name="field" value="DNS">
                                 <input type="hidden" name="token" value="<?php echo $token ?>">
                                 <button type="submit" class="btn btn-primary pull-right">Save</button>
+								<button type="submit" class="btn btn-primary pull-right" name="restartFTL" style="margin-right: 5px;">Save & Apply</button>
                             </div>
                         </div>
                     </form>
@@ -1006,9 +1088,8 @@ if (isset($_GET['tab']) && in_array($_GE
                 <!-- ######################################################### API and Web ######################################################### -->
                 <?php
                 // Administrator email address
-                if (isset($setupVars["ADMIN_EMAIL"])) {
-                    $adminemail = $setupVars["ADMIN_EMAIL"];
-                } else {
+                $adminemail = uci_get("pihole", "@pihole[0]", "admin_email");
+                if (!isset($adminemail)) {
                     $adminemail = "";
                 }
                 ?>
@@ -1225,10 +1307,11 @@ if (isset($_GET['tab']) && in_array($_GE
                 <!-- ######################################################### Privacy (may be expanded further later on) ######################################################### -->
                 <?php
                 // Get privacy level from piholeFTL config array
-                if (isset($piholeFTLConf["PRIVACYLEVEL"])) {
-                    $privacylevel = intval($piholeFTLConf["PRIVACYLEVEL"]);
-                } else {
+                $privacylvl = uci_get("pihole", "@pihole[0]", "privacylevel");
+                if (!isset($privacylvl)) {
                     $privacylevel = 0;
+                } else {
+                    $privacylevel = intval($privacylvl);
                 }
                 ?>
                 <div id="privacy" class="tab-pane fade<?php if($tab === "privacy"){ ?> in active<?php } ?>">
@@ -1281,163 +1364,6 @@ if (isset($_GET['tab']) && in_array($_GE
                         </div>
                     </div>
                 </div>
-                <!-- ######################################################### Teleporter ######################################################### -->
-                <div id="teleporter" class="tab-pane fade<?php if($tab === "teleporter"){ ?> in active<?php } ?>">
-                    <div class="row">
-                        <?php if (extension_loaded('Phar')) { ?>
-                        <form role="form" method="post" id="takeoutform"
-                              action="scripts/pi-hole/php/teleporter.php"
-                              target="teleporter_iframe" enctype="multipart/form-data">
-                            <input type="hidden" name="token" value="<?php echo $token ?>">
-                            <div class="col-lg-6 col-md-12">
-                                <div class="box box-warning">
-                                    <div class="box-header with-border">
-                                        <h3 class="box-title">Backup</h3>
-                                    </div>
-                                    <div class="box-body">
-                                        <div class="row">
-                                            <div class="col-lg-12">
-                                                <p>Backup your Pi-hole configuration (settings &amp; lists) as a downloadable archive</p>
-                                                <button type="submit" class="btn btn-default">Backup</button>
-                                            </div>
-                                        </div>
-                                    </div>
-                                </div>
-                            </div>
-                            <div class="col-lg-6 col-md-12">
-                                <div class="box box-warning">
-                                    <div class="box-header with-border">
-                                        <h3 class="box-title">Restore</h3>
-                                    </div>
-                                    <div class="box-body">
-                                        <div class="row">
-                                            <div class="col-lg-12">
-                                                <label>Restore...</label>
-                                            </div>
-                                        </div>
-                                        <div class="row">
-                                            <div class="col-lg-6">
-                                                <div>
-                                                    <input type="checkbox" name="whitelist" id="tele_whitelist" value="true" checked>
-                                                    <label for="tele_whitelist">Whitelist (exact)</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="regex_whitelist" id="tele_regex_whitelist" value="true" checked>
-                                                    <label for="tele_regex_whitelist">Whitelist (regex/wildcard)</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="blacklist" id="tele_blacklist" value="true" checked>
-                                                    <label for="tele_blacklist">Blacklist (exact)</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="regexlist" id="tele_regexlist" value="true" checked>
-                                                    <label for="tele_regexlist">Blacklist (regex/wildcard)</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="adlist" id="tele_adlist" value="true" checked>
-                                                    <label for="tele_adlist">Adlists</label>
-                                                </div>
-                                            </div>
-                                            <div class="col-lg-6">
-                                                <div>
-                                                    <input type="checkbox" name="client" id="tele_client" value="true" checked>
-                                                    <label for="tele_client">Client</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="group" id="tele_group" value="true" checked>
-                                                    <label for="tele_group">Group</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="auditlog" id="tele_auditlog" value="true" checked>
-                                                    <label for="tele_auditlog">Audit log</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="staticdhcpleases" id="tele_staticdhcpleases" value="true" checked>
-                                                    <label for="tele_staticdhcpleases">Static DHCP Leases</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="localdnsrecords" id="tele_localdnsrecords" value="true" checked>
-                                                    <label for="tele_localdnsrecords">Local DNS Records</label>
-                                                </div>
-                                                <div>
-                                                    <input type="checkbox" name="localcnamerecords" id="tele_localcnamerecords" value="true" checked>
-                                                    <label for="tele_localcnamerecords">Local CNAME Records</label>
-                                                </div>
-                                            </div>
-                                        </div>
-                                        <div class="row">
-                                            <div class="col-lg-12">
-                                                <label for="zip_file">File input</label>
-                                                <div class="input-group">
-                                                    <span class="input-group-btn">
-                                                        <span class="btn btn-default btn-file" tabindex="0">Browse...
-                                                            <input type="file" name="zip_file" id="zip_file" accept="application/gzip" tabindex="-1">
-                                                        </span>
-                                                    </span>
-                                                    <input type="text" id="zip_filename" class="form-control"
-                                                           placeholder="no file selected" readonly="readonly" tabindex="-1">
-                                                </div>
-                                                <p class="help-block">Upload only Pi-hole backup files.</p>
-                                            </div>
-                                        </div>
-                                        <div class="row">
-                                            <div class="col-lg-12">
-                                                <div>
-                                                    <input type="checkbox" name="flushtables" id="tele_flushtables" value="true" checked>
-                                                    <label for="tele_flushtables">Clear existing data</label>
-                                                </div>
-                                            </div>
-                                        </div>
-                                    </div>
-                                    <div class="box-footer clearfix">
-                                        <button type="submit" class="btn btn-default" name="action"
-                                                value="in" data-toggle="modal" data-target="#teleporterModal">Restore
-                                        </button>
-                                    </div>
-                                </div>
-                            </div>
-                        </form>
-                        <div class="modal fade" id="teleporterModal" role="dialog" data-keyboard="false"
-                             tabindex="-1" data-backdrop="static" aria-labelledby="teleporterModalLabel">
-                            <div class="modal-dialog" role="document">
-                                <div class="modal-content">
-                                    <div class="modal-header">
-                                        <h4 class="modal-title" id="exampleModalLabel">Teleporter Import</h4>
-                                    </div>
-                                    <div class="modal-body">
-                                        <label class="control-label">Output:</label>
-                                        <div class="box no-margin no-border no-shadow">
-                                            <pre class="no-margin no-padding"><iframe class="col-xs-12 no-border no-padding"
-                                                                                      name="teleporter_iframe" height="100"
-                                                                                      tabindex="-1"></iframe></pre>
-                                            <div class="overlay">
-                                                <i class="fa fa-spinner fa-pulse"></i>
-                                            </div>
-                                        </div>
-                                    </div>
-                                    <div class="modal-footer">
-                                        <button type="button" data-dismiss="modal" class="btn btn-default">Close</button>
-                                        <button type="button" data-dismiss="modal" class="btn btn-default hidden">
-                                            <i class="fas fa-sync"></i> Reload page
-                                        </button>
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                        <?php } else { ?>
-                        <div class="col-lg-12">
-                            <div class="box box-warning">
-                                <div class="box-header with-border">
-                                    <h3 class="box-title">Teleporter</h3>
-                                </div>
-                                <div class="box-body">
-                                    <p>The PHP extension <code>Phar</code> is not loaded. Please ensure it is installed and loaded if you want to use the Pi-hole teleporter.</p>
-                                </div>
-                            </div>
-                        </div>
-                        <?php } ?>
-                    </div>
-                </div>
             </div>
         </div>
     </div>
